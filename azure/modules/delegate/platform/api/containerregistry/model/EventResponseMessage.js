/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventResponseMessage model module.
 * @module model/EventResponseMessage
 * @version 2019-06-01-preview
 */
class EventResponseMessage {
    /**
     * Constructs a new <code>EventResponseMessage</code>.
     * The event response message received from the service URI.
     * @alias module:model/EventResponseMessage
     */
    constructor() { 
        
        EventResponseMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventResponseMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventResponseMessage} obj Optional instance to populate.
     * @return {module:model/EventResponseMessage} The populated <code>EventResponseMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventResponseMessage();

            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], {'String': 'String'});
            }
            if (data.hasOwnProperty('reasonPhrase')) {
                obj['reasonPhrase'] = ApiClient.convertToType(data['reasonPhrase'], 'String');
            }
            if (data.hasOwnProperty('statusCode')) {
                obj['statusCode'] = ApiClient.convertToType(data['statusCode'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventResponseMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventResponseMessage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['content'] && !(typeof data['content'] === 'string' || data['content'] instanceof String)) {
            throw new Error("Expected the field `content` to be a primitive type in the JSON string but got " + data['content']);
        }
        // ensure the json data is a string
        if (data['reasonPhrase'] && !(typeof data['reasonPhrase'] === 'string' || data['reasonPhrase'] instanceof String)) {
            throw new Error("Expected the field `reasonPhrase` to be a primitive type in the JSON string but got " + data['reasonPhrase']);
        }
        // ensure the json data is a string
        if (data['statusCode'] && !(typeof data['statusCode'] === 'string' || data['statusCode'] instanceof String)) {
            throw new Error("Expected the field `statusCode` to be a primitive type in the JSON string but got " + data['statusCode']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * The content of the event response message.
 * @member {String} content
 */
EventResponseMessage.prototype['content'] = undefined;

/**
 * The headers of the event response message.
 * @member {Object.<String, String>} headers
 */
EventResponseMessage.prototype['headers'] = undefined;

/**
 * The reason phrase of the event response message.
 * @member {String} reasonPhrase
 */
EventResponseMessage.prototype['reasonPhrase'] = undefined;

/**
 * The status code of the event response message.
 * @member {String} statusCode
 */
EventResponseMessage.prototype['statusCode'] = undefined;

/**
 * The HTTP message version.
 * @member {String} version
 */
EventResponseMessage.prototype['version'] = undefined;






export default EventResponseMessage;

