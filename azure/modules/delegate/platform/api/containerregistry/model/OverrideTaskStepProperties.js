/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Argument from './Argument';
import SetValue from './SetValue';

/**
 * The OverrideTaskStepProperties model module.
 * @module model/OverrideTaskStepProperties
 * @version 2019-06-01-preview
 */
class OverrideTaskStepProperties {
    /**
     * Constructs a new <code>OverrideTaskStepProperties</code>.
     * @alias module:model/OverrideTaskStepProperties
     */
    constructor() { 
        
        OverrideTaskStepProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OverrideTaskStepProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OverrideTaskStepProperties} obj Optional instance to populate.
     * @return {module:model/OverrideTaskStepProperties} The populated <code>OverrideTaskStepProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OverrideTaskStepProperties();

            if (data.hasOwnProperty('contextPath')) {
                obj['contextPath'] = ApiClient.convertToType(data['contextPath'], 'String');
            }
            if (data.hasOwnProperty('file')) {
                obj['file'] = ApiClient.convertToType(data['file'], 'String');
            }
            if (data.hasOwnProperty('arguments')) {
                obj['arguments'] = ApiClient.convertToType(data['arguments'], [Argument]);
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = ApiClient.convertToType(data['target'], 'String');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], [SetValue]);
            }
            if (data.hasOwnProperty('updateTriggerToken')) {
                obj['updateTriggerToken'] = ApiClient.convertToType(data['updateTriggerToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OverrideTaskStepProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OverrideTaskStepProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['contextPath'] && !(typeof data['contextPath'] === 'string' || data['contextPath'] instanceof String)) {
            throw new Error("Expected the field `contextPath` to be a primitive type in the JSON string but got " + data['contextPath']);
        }
        // ensure the json data is a string
        if (data['file'] && !(typeof data['file'] === 'string' || data['file'] instanceof String)) {
            throw new Error("Expected the field `file` to be a primitive type in the JSON string but got " + data['file']);
        }
        if (data['arguments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['arguments'])) {
                throw new Error("Expected the field `arguments` to be an array in the JSON data but got " + data['arguments']);
            }
            // validate the optional field `arguments` (array)
            for (const item of data['arguments']) {
                Argument.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['target'] && !(typeof data['target'] === 'string' || data['target'] instanceof String)) {
            throw new Error("Expected the field `target` to be a primitive type in the JSON string but got " + data['target']);
        }
        if (data['values']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['values'])) {
                throw new Error("Expected the field `values` to be an array in the JSON data but got " + data['values']);
            }
            // validate the optional field `values` (array)
            for (const item of data['values']) {
                SetValue.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['updateTriggerToken'] && !(typeof data['updateTriggerToken'] === 'string' || data['updateTriggerToken'] instanceof String)) {
            throw new Error("Expected the field `updateTriggerToken` to be a primitive type in the JSON string but got " + data['updateTriggerToken']);
        }

        return true;
    }


}



/**
 * The source context against which run has to be queued.
 * @member {String} contextPath
 */
OverrideTaskStepProperties.prototype['contextPath'] = undefined;

/**
 * The file against which run has to be queued.
 * @member {String} file
 */
OverrideTaskStepProperties.prototype['file'] = undefined;

/**
 * Gets or sets the collection of override arguments to be used when  executing a build step.
 * @member {Array.<module:model/Argument>} arguments
 */
OverrideTaskStepProperties.prototype['arguments'] = undefined;

/**
 * The name of the target build stage for the docker build.
 * @member {String} target
 */
OverrideTaskStepProperties.prototype['target'] = undefined;

/**
 * The collection of overridable values that can be passed when running a Task.
 * @member {Array.<module:model/SetValue>} values
 */
OverrideTaskStepProperties.prototype['values'] = undefined;

/**
 * Base64 encoded update trigger token that will be attached with the base image trigger webhook.
 * @member {String} updateTriggerToken
 */
OverrideTaskStepProperties.prototype['updateTriggerToken'] = undefined;






export default OverrideTaskStepProperties;

