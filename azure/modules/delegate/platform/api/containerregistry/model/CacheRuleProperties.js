/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CacheRuleProperties model module.
 * @module model/CacheRuleProperties
 * @version 2019-06-01-preview
 */
class CacheRuleProperties {
    /**
     * Constructs a new <code>CacheRuleProperties</code>.
     * The properties of a cache rule.
     * @alias module:model/CacheRuleProperties
     */
    constructor() { 
        
        CacheRuleProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CacheRuleProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CacheRuleProperties} obj Optional instance to populate.
     * @return {module:model/CacheRuleProperties} The populated <code>CacheRuleProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CacheRuleProperties();

            if (data.hasOwnProperty('credentialSetResourceId')) {
                obj['credentialSetResourceId'] = ApiClient.convertToType(data['credentialSetResourceId'], 'String');
            }
            if (data.hasOwnProperty('sourceRepository')) {
                obj['sourceRepository'] = ApiClient.convertToType(data['sourceRepository'], 'String');
            }
            if (data.hasOwnProperty('targetRepository')) {
                obj['targetRepository'] = ApiClient.convertToType(data['targetRepository'], 'String');
            }
            if (data.hasOwnProperty('creationDate')) {
                obj['creationDate'] = ApiClient.convertToType(data['creationDate'], 'Date');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CacheRuleProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CacheRuleProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['credentialSetResourceId'] && !(typeof data['credentialSetResourceId'] === 'string' || data['credentialSetResourceId'] instanceof String)) {
            throw new Error("Expected the field `credentialSetResourceId` to be a primitive type in the JSON string but got " + data['credentialSetResourceId']);
        }
        // ensure the json data is a string
        if (data['sourceRepository'] && !(typeof data['sourceRepository'] === 'string' || data['sourceRepository'] instanceof String)) {
            throw new Error("Expected the field `sourceRepository` to be a primitive type in the JSON string but got " + data['sourceRepository']);
        }
        // ensure the json data is a string
        if (data['targetRepository'] && !(typeof data['targetRepository'] === 'string' || data['targetRepository'] instanceof String)) {
            throw new Error("Expected the field `targetRepository` to be a primitive type in the JSON string but got " + data['targetRepository']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }

        return true;
    }


}



/**
 * The ARM resource ID of the credential store which is associated with the cache rule.
 * @member {String} credentialSetResourceId
 */
CacheRuleProperties.prototype['credentialSetResourceId'] = undefined;

/**
 * Source repository pulled from upstream.
 * @member {String} sourceRepository
 */
CacheRuleProperties.prototype['sourceRepository'] = undefined;

/**
 * Target repository specified in docker pull command.  Eg: docker pull myregistry.azurecr.io/{targetRepository}:{tag}
 * @member {String} targetRepository
 */
CacheRuleProperties.prototype['targetRepository'] = undefined;

/**
 * The creation date of the cache rule.
 * @member {Date} creationDate
 */
CacheRuleProperties.prototype['creationDate'] = undefined;

/**
 * Provisioning state of the resource.
 * @member {module:model/CacheRuleProperties.ProvisioningStateEnum} provisioningState
 */
CacheRuleProperties.prototype['provisioningState'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
CacheRuleProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "Updating"
     * @const
     */
    "Updating": "Updating",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Canceled"
     * @const
     */
    "Canceled": "Canceled"
};



export default CacheRuleProperties;

