/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OperationMetricSpecificationDefinition model module.
 * @module model/OperationMetricSpecificationDefinition
 * @version 2019-06-01-preview
 */
class OperationMetricSpecificationDefinition {
    /**
     * Constructs a new <code>OperationMetricSpecificationDefinition</code>.
     * The definition of Azure Monitoring metric.
     * @alias module:model/OperationMetricSpecificationDefinition
     */
    constructor() { 
        
        OperationMetricSpecificationDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OperationMetricSpecificationDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OperationMetricSpecificationDefinition} obj Optional instance to populate.
     * @return {module:model/OperationMetricSpecificationDefinition} The populated <code>OperationMetricSpecificationDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OperationMetricSpecificationDefinition();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('displayDescription')) {
                obj['displayDescription'] = ApiClient.convertToType(data['displayDescription'], 'String');
            }
            if (data.hasOwnProperty('unit')) {
                obj['unit'] = ApiClient.convertToType(data['unit'], 'String');
            }
            if (data.hasOwnProperty('aggregationType')) {
                obj['aggregationType'] = ApiClient.convertToType(data['aggregationType'], 'String');
            }
            if (data.hasOwnProperty('internalMetricName')) {
                obj['internalMetricName'] = ApiClient.convertToType(data['internalMetricName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OperationMetricSpecificationDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OperationMetricSpecificationDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['displayDescription'] && !(typeof data['displayDescription'] === 'string' || data['displayDescription'] instanceof String)) {
            throw new Error("Expected the field `displayDescription` to be a primitive type in the JSON string but got " + data['displayDescription']);
        }
        // ensure the json data is a string
        if (data['unit'] && !(typeof data['unit'] === 'string' || data['unit'] instanceof String)) {
            throw new Error("Expected the field `unit` to be a primitive type in the JSON string but got " + data['unit']);
        }
        // ensure the json data is a string
        if (data['aggregationType'] && !(typeof data['aggregationType'] === 'string' || data['aggregationType'] instanceof String)) {
            throw new Error("Expected the field `aggregationType` to be a primitive type in the JSON string but got " + data['aggregationType']);
        }
        // ensure the json data is a string
        if (data['internalMetricName'] && !(typeof data['internalMetricName'] === 'string' || data['internalMetricName'] instanceof String)) {
            throw new Error("Expected the field `internalMetricName` to be a primitive type in the JSON string but got " + data['internalMetricName']);
        }

        return true;
    }


}



/**
 * Metric name.
 * @member {String} name
 */
OperationMetricSpecificationDefinition.prototype['name'] = undefined;

/**
 * Metric display name.
 * @member {String} displayName
 */
OperationMetricSpecificationDefinition.prototype['displayName'] = undefined;

/**
 * Metric description.
 * @member {String} displayDescription
 */
OperationMetricSpecificationDefinition.prototype['displayDescription'] = undefined;

/**
 * Metric unit.
 * @member {String} unit
 */
OperationMetricSpecificationDefinition.prototype['unit'] = undefined;

/**
 * Metric aggregation type.
 * @member {String} aggregationType
 */
OperationMetricSpecificationDefinition.prototype['aggregationType'] = undefined;

/**
 * Internal metric name.
 * @member {String} internalMetricName
 */
OperationMetricSpecificationDefinition.prototype['internalMetricName'] = undefined;






export default OperationMetricSpecificationDefinition;

