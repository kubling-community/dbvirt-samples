/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TaskStepUpdateParameters model module.
 * @module model/TaskStepUpdateParameters
 * @version 2019-06-01-preview
 */
class TaskStepUpdateParameters {
    /**
     * Constructs a new <code>TaskStepUpdateParameters</code>.
     * Base properties for updating any task step.
     * @alias module:model/TaskStepUpdateParameters
     * @param type {module:model/TaskStepUpdateParameters.TypeEnum} The type of the step.
     */
    constructor(type) { 
        
        TaskStepUpdateParameters.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['type'] = type;
    }

    /**
     * Constructs a <code>TaskStepUpdateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaskStepUpdateParameters} obj Optional instance to populate.
     * @return {module:model/TaskStepUpdateParameters} The populated <code>TaskStepUpdateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaskStepUpdateParameters();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('contextPath')) {
                obj['contextPath'] = ApiClient.convertToType(data['contextPath'], 'String');
            }
            if (data.hasOwnProperty('contextAccessToken')) {
                obj['contextAccessToken'] = ApiClient.convertToType(data['contextAccessToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TaskStepUpdateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TaskStepUpdateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TaskStepUpdateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['contextPath'] && !(typeof data['contextPath'] === 'string' || data['contextPath'] instanceof String)) {
            throw new Error("Expected the field `contextPath` to be a primitive type in the JSON string but got " + data['contextPath']);
        }
        // ensure the json data is a string
        if (data['contextAccessToken'] && !(typeof data['contextAccessToken'] === 'string' || data['contextAccessToken'] instanceof String)) {
            throw new Error("Expected the field `contextAccessToken` to be a primitive type in the JSON string but got " + data['contextAccessToken']);
        }

        return true;
    }


}

TaskStepUpdateParameters.RequiredProperties = ["type"];

/**
 * The type of the step.
 * @member {module:model/TaskStepUpdateParameters.TypeEnum} type
 */
TaskStepUpdateParameters.prototype['type'] = undefined;

/**
 * The URL(absolute or relative) of the source context for the task step.
 * @member {String} contextPath
 */
TaskStepUpdateParameters.prototype['contextPath'] = undefined;

/**
 * The token (git PAT or SAS token of storage account blob) associated with the context for a step.
 * @member {String} contextAccessToken
 */
TaskStepUpdateParameters.prototype['contextAccessToken'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
TaskStepUpdateParameters['TypeEnum'] = {

    /**
     * value: "Docker"
     * @const
     */
    "Docker": "Docker",

    /**
     * value: "FileTask"
     * @const
     */
    "FileTask": "FileTask",

    /**
     * value: "EncodedTask"
     * @const
     */
    "EncodedTask": "EncodedTask"
};



export default TaskStepUpdateParameters;

