/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PipelineRunRequest from './PipelineRunRequest';
import PipelineRunResponse from './PipelineRunResponse';

/**
 * The PipelineRunProperties model module.
 * @module model/PipelineRunProperties
 * @version 2019-06-01-preview
 */
class PipelineRunProperties {
    /**
     * Constructs a new <code>PipelineRunProperties</code>.
     * The properties of a pipeline run.
     * @alias module:model/PipelineRunProperties
     */
    constructor() { 
        
        PipelineRunProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PipelineRunProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PipelineRunProperties} obj Optional instance to populate.
     * @return {module:model/PipelineRunProperties} The populated <code>PipelineRunProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PipelineRunProperties();

            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('request')) {
                obj['request'] = PipelineRunRequest.constructFromObject(data['request']);
            }
            if (data.hasOwnProperty('response')) {
                obj['response'] = PipelineRunResponse.constructFromObject(data['response']);
            }
            if (data.hasOwnProperty('forceUpdateTag')) {
                obj['forceUpdateTag'] = ApiClient.convertToType(data['forceUpdateTag'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PipelineRunProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PipelineRunProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // validate the optional field `request`
        if (data['request']) { // data not null
          PipelineRunRequest.validateJSON(data['request']);
        }
        // validate the optional field `response`
        if (data['response']) { // data not null
          PipelineRunResponse.validateJSON(data['response']);
        }
        // ensure the json data is a string
        if (data['forceUpdateTag'] && !(typeof data['forceUpdateTag'] === 'string' || data['forceUpdateTag'] instanceof String)) {
            throw new Error("Expected the field `forceUpdateTag` to be a primitive type in the JSON string but got " + data['forceUpdateTag']);
        }

        return true;
    }


}



/**
 * The provisioning state of a pipeline run.
 * @member {module:model/PipelineRunProperties.ProvisioningStateEnum} provisioningState
 */
PipelineRunProperties.prototype['provisioningState'] = undefined;

/**
 * @member {module:model/PipelineRunRequest} request
 */
PipelineRunProperties.prototype['request'] = undefined;

/**
 * @member {module:model/PipelineRunResponse} response
 */
PipelineRunProperties.prototype['response'] = undefined;

/**
 * How the pipeline run should be forced to recreate even if the pipeline run configuration has not changed.
 * @member {String} forceUpdateTag
 */
PipelineRunProperties.prototype['forceUpdateTag'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
PipelineRunProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "Updating"
     * @const
     */
    "Updating": "Updating",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Canceled"
     * @const
     */
    "Canceled": "Canceled"
};



export default PipelineRunProperties;

