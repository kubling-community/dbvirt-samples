/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ArchiveVersionProperties model module.
 * @module model/ArchiveVersionProperties
 * @version 2019-06-01-preview
 */
class ArchiveVersionProperties {
    /**
     * Constructs a new <code>ArchiveVersionProperties</code>.
     * The properties of an export pipeline.
     * @alias module:model/ArchiveVersionProperties
     */
    constructor() { 
        
        ArchiveVersionProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ArchiveVersionProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ArchiveVersionProperties} obj Optional instance to populate.
     * @return {module:model/ArchiveVersionProperties} The populated <code>ArchiveVersionProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ArchiveVersionProperties();

            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('archiveVersionErrorMessage')) {
                obj['archiveVersionErrorMessage'] = ApiClient.convertToType(data['archiveVersionErrorMessage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ArchiveVersionProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ArchiveVersionProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['archiveVersionErrorMessage'] && !(typeof data['archiveVersionErrorMessage'] === 'string' || data['archiveVersionErrorMessage'] instanceof String)) {
            throw new Error("Expected the field `archiveVersionErrorMessage` to be a primitive type in the JSON string but got " + data['archiveVersionErrorMessage']);
        }

        return true;
    }


}



/**
 * The provisioning state of the archive at the time the operation was called.
 * @member {module:model/ArchiveVersionProperties.ProvisioningStateEnum} provisioningState
 */
ArchiveVersionProperties.prototype['provisioningState'] = undefined;

/**
 * The detailed error message for the archive version in the case of failure.
 * @member {String} archiveVersionErrorMessage
 */
ArchiveVersionProperties.prototype['archiveVersionErrorMessage'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
ArchiveVersionProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "Updating"
     * @const
     */
    "Updating": "Updating",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Canceled"
     * @const
     */
    "Canceled": "Canceled"
};



export default ArchiveVersionProperties;

