/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BaseImageTrigger from './BaseImageTrigger';
import SourceTrigger from './SourceTrigger';
import TimerTrigger from './TimerTrigger';

/**
 * The TriggerProperties model module.
 * @module model/TriggerProperties
 * @version 2019-06-01-preview
 */
class TriggerProperties {
    /**
     * Constructs a new <code>TriggerProperties</code>.
     * The properties of a trigger.
     * @alias module:model/TriggerProperties
     */
    constructor() { 
        
        TriggerProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TriggerProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TriggerProperties} obj Optional instance to populate.
     * @return {module:model/TriggerProperties} The populated <code>TriggerProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TriggerProperties();

            if (data.hasOwnProperty('timerTriggers')) {
                obj['timerTriggers'] = ApiClient.convertToType(data['timerTriggers'], [TimerTrigger]);
            }
            if (data.hasOwnProperty('sourceTriggers')) {
                obj['sourceTriggers'] = ApiClient.convertToType(data['sourceTriggers'], [SourceTrigger]);
            }
            if (data.hasOwnProperty('baseImageTrigger')) {
                obj['baseImageTrigger'] = BaseImageTrigger.constructFromObject(data['baseImageTrigger']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TriggerProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TriggerProperties</code>.
     */
    static validateJSON(data) {
        if (data['timerTriggers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['timerTriggers'])) {
                throw new Error("Expected the field `timerTriggers` to be an array in the JSON data but got " + data['timerTriggers']);
            }
            // validate the optional field `timerTriggers` (array)
            for (const item of data['timerTriggers']) {
                TimerTrigger.validateJSON(item);
            };
        }
        if (data['sourceTriggers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sourceTriggers'])) {
                throw new Error("Expected the field `sourceTriggers` to be an array in the JSON data but got " + data['sourceTriggers']);
            }
            // validate the optional field `sourceTriggers` (array)
            for (const item of data['sourceTriggers']) {
                SourceTrigger.validateJSON(item);
            };
        }
        // validate the optional field `baseImageTrigger`
        if (data['baseImageTrigger']) { // data not null
          BaseImageTrigger.validateJSON(data['baseImageTrigger']);
        }

        return true;
    }


}



/**
 * The collection of timer triggers.
 * @member {Array.<module:model/TimerTrigger>} timerTriggers
 */
TriggerProperties.prototype['timerTriggers'] = undefined;

/**
 * The collection of triggers based on source code repository.
 * @member {Array.<module:model/SourceTrigger>} sourceTriggers
 */
TriggerProperties.prototype['sourceTriggers'] = undefined;

/**
 * @member {module:model/BaseImageTrigger} baseImageTrigger
 */
TriggerProperties.prototype['baseImageTrigger'] = undefined;






export default TriggerProperties;

