/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TimerTriggerDescriptor model module.
 * @module model/TimerTriggerDescriptor
 * @version 2019-06-01-preview
 */
class TimerTriggerDescriptor {
    /**
     * Constructs a new <code>TimerTriggerDescriptor</code>.
     * @alias module:model/TimerTriggerDescriptor
     */
    constructor() { 
        
        TimerTriggerDescriptor.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TimerTriggerDescriptor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimerTriggerDescriptor} obj Optional instance to populate.
     * @return {module:model/TimerTriggerDescriptor} The populated <code>TimerTriggerDescriptor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimerTriggerDescriptor();

            if (data.hasOwnProperty('timerTriggerName')) {
                obj['timerTriggerName'] = ApiClient.convertToType(data['timerTriggerName'], 'String');
            }
            if (data.hasOwnProperty('scheduleOccurrence')) {
                obj['scheduleOccurrence'] = ApiClient.convertToType(data['scheduleOccurrence'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimerTriggerDescriptor</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimerTriggerDescriptor</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['timerTriggerName'] && !(typeof data['timerTriggerName'] === 'string' || data['timerTriggerName'] instanceof String)) {
            throw new Error("Expected the field `timerTriggerName` to be a primitive type in the JSON string but got " + data['timerTriggerName']);
        }
        // ensure the json data is a string
        if (data['scheduleOccurrence'] && !(typeof data['scheduleOccurrence'] === 'string' || data['scheduleOccurrence'] instanceof String)) {
            throw new Error("Expected the field `scheduleOccurrence` to be a primitive type in the JSON string but got " + data['scheduleOccurrence']);
        }

        return true;
    }


}



/**
 * The timer trigger name that caused the run.
 * @member {String} timerTriggerName
 */
TimerTriggerDescriptor.prototype['timerTriggerName'] = undefined;

/**
 * The occurrence that triggered the run.
 * @member {String} scheduleOccurrence
 */
TimerTriggerDescriptor.prototype['scheduleOccurrence'] = undefined;






export default TimerTriggerDescriptor;

