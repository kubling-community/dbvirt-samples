/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SourceRegistryCredentials model module.
 * @module model/SourceRegistryCredentials
 * @version 2019-06-01-preview
 */
class SourceRegistryCredentials {
    /**
     * Constructs a new <code>SourceRegistryCredentials</code>.
     * Describes the credential parameters for accessing the source registry.
     * @alias module:model/SourceRegistryCredentials
     */
    constructor() { 
        
        SourceRegistryCredentials.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SourceRegistryCredentials</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SourceRegistryCredentials} obj Optional instance to populate.
     * @return {module:model/SourceRegistryCredentials} The populated <code>SourceRegistryCredentials</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SourceRegistryCredentials();

            if (data.hasOwnProperty('loginMode')) {
                obj['loginMode'] = ApiClient.convertToType(data['loginMode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SourceRegistryCredentials</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SourceRegistryCredentials</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['loginMode'] && !(typeof data['loginMode'] === 'string' || data['loginMode'] instanceof String)) {
            throw new Error("Expected the field `loginMode` to be a primitive type in the JSON string but got " + data['loginMode']);
        }

        return true;
    }


}



/**
 * The authentication mode which determines the source registry login scope. The credentials for the source registry  will be generated using the given scope. These credentials will be used to login to  the source registry during the run.
 * @member {module:model/SourceRegistryCredentials.LoginModeEnum} loginMode
 */
SourceRegistryCredentials.prototype['loginMode'] = undefined;





/**
 * Allowed values for the <code>loginMode</code> property.
 * @enum {String}
 * @readonly
 */
SourceRegistryCredentials['LoginModeEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "Default"
     * @const
     */
    "Default": "Default"
};



export default SourceRegistryCredentials;

