/**
 * ContainerRegistryManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CallbackConfig model module.
 * @module model/CallbackConfig
 * @version 2019-06-01-preview
 */
class CallbackConfig {
    /**
     * Constructs a new <code>CallbackConfig</code>.
     * The configuration of service URI and custom headers for the webhook.
     * @alias module:model/CallbackConfig
     * @param serviceUri {String} The service URI for the webhook to post notifications.
     */
    constructor(serviceUri) { 
        
        CallbackConfig.initialize(this, serviceUri);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, serviceUri) { 
        obj['serviceUri'] = serviceUri;
    }

    /**
     * Constructs a <code>CallbackConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CallbackConfig} obj Optional instance to populate.
     * @return {module:model/CallbackConfig} The populated <code>CallbackConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CallbackConfig();

            if (data.hasOwnProperty('serviceUri')) {
                obj['serviceUri'] = ApiClient.convertToType(data['serviceUri'], 'String');
            }
            if (data.hasOwnProperty('customHeaders')) {
                obj['customHeaders'] = ApiClient.convertToType(data['customHeaders'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CallbackConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CallbackConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CallbackConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['serviceUri'] && !(typeof data['serviceUri'] === 'string' || data['serviceUri'] instanceof String)) {
            throw new Error("Expected the field `serviceUri` to be a primitive type in the JSON string but got " + data['serviceUri']);
        }

        return true;
    }


}

CallbackConfig.RequiredProperties = ["serviceUri"];

/**
 * The service URI for the webhook to post notifications.
 * @member {String} serviceUri
 */
CallbackConfig.prototype['serviceUri'] = undefined;

/**
 * Custom headers that will be added to the webhook notifications.
 * @member {Object.<String, String>} customHeaders
 */
CallbackConfig.prototype['customHeaders'] = undefined;






export default CallbackConfig;

