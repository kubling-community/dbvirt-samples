/**
 * AzureArcDataManagementClient
 * The AzureArcData management API provides a RESTful set of web APIs to manage Azure Data Services on Azure Arc Resources.
 *
 * The version of the OpenAPI document: 2023-01-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FailoverGroupProperties from './FailoverGroupProperties';
import ProxyResource from './ProxyResource';
import SystemData from './SystemData';

/**
 * The FailoverGroupResource model module.
 * @module model/FailoverGroupResource
 * @version 2023-01-15-preview
 */
class FailoverGroupResource {
    /**
     * Constructs a new <code>FailoverGroupResource</code>.
     * A failover group resource.
     * @alias module:model/FailoverGroupResource
     * @implements module:model/ProxyResource
     */
    constructor() { 
        ProxyResource.initialize(this);
        FailoverGroupResource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['properties'] = properties;
    }

    /**
     * Constructs a <code>FailoverGroupResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FailoverGroupResource} obj Optional instance to populate.
     * @return {module:model/FailoverGroupResource} The populated <code>FailoverGroupResource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FailoverGroupResource();
            ProxyResource.constructFromObject(data, obj);

            if (data.hasOwnProperty('properties')) {
                obj['properties'] = FailoverGroupProperties.constructFromObject(data['properties']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('systemData')) {
                obj['systemData'] = SystemData.constructFromObject(data['systemData']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FailoverGroupResource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FailoverGroupResource</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FailoverGroupResource.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

FailoverGroupResource.RequiredProperties = ["properties"];

/**
 * @member {module:model/FailoverGroupProperties} properties
 */
FailoverGroupResource.prototype['properties'] = undefined;

/**
 * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
 * @member {String} id
 */
FailoverGroupResource.prototype['id'] = undefined;

/**
 * The name of the resource
 * @member {String} name
 */
FailoverGroupResource.prototype['name'] = undefined;

/**
 * The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"
 * @member {String} type
 */
FailoverGroupResource.prototype['type'] = undefined;

/**
 * @member {module:model/SystemData} systemData
 */
FailoverGroupResource.prototype['systemData'] = undefined;


// Implement ProxyResource interface:
/**
 * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
 * @member {String} id
 */
ProxyResource.prototype['id'] = undefined;
/**
 * The name of the resource
 * @member {String} name
 */
ProxyResource.prototype['name'] = undefined;
/**
 * The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"
 * @member {String} type
 */
ProxyResource.prototype['type'] = undefined;
/**
 * @member {module:model/SystemData} systemData
 */
ProxyResource.prototype['systemData'] = undefined;




export default FailoverGroupResource;

