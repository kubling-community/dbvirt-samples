/**
 * AzureArcDataManagementClient
 * The AzureArcData management API provides a RESTful set of web APIs to manage Azure Data Services on Azure Arc Resources.
 *
 * The version of the OpenAPI document: 2023-01-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FailoverGroupSpec from './FailoverGroupSpec';

/**
 * The FailoverGroupProperties model module.
 * @module model/FailoverGroupProperties
 * @version 2023-01-15-preview
 */
class FailoverGroupProperties {
    /**
     * Constructs a new <code>FailoverGroupProperties</code>.
     * The properties of a failover group resource.
     * @alias module:model/FailoverGroupProperties
     * @extends Object
     * @param partnerManagedInstanceId {String} The resource ID of the partner SQL managed instance.
     * @param spec {module:model/FailoverGroupSpec} 
     */
    constructor(partnerManagedInstanceId, spec) { 
        
        FailoverGroupProperties.initialize(this, partnerManagedInstanceId, spec);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, partnerManagedInstanceId, spec) { 
        obj['partnerManagedInstanceId'] = partnerManagedInstanceId;
        obj['spec'] = spec;
    }

    /**
     * Constructs a <code>FailoverGroupProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FailoverGroupProperties} obj Optional instance to populate.
     * @return {module:model/FailoverGroupProperties} The populated <code>FailoverGroupProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FailoverGroupProperties();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('partnerManagedInstanceId')) {
                obj['partnerManagedInstanceId'] = ApiClient.convertToType(data['partnerManagedInstanceId'], 'String');
            }
            if (data.hasOwnProperty('spec')) {
                obj['spec'] = FailoverGroupSpec.constructFromObject(data['spec']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FailoverGroupProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FailoverGroupProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FailoverGroupProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['partnerManagedInstanceId'] && !(typeof data['partnerManagedInstanceId'] === 'string' || data['partnerManagedInstanceId'] instanceof String)) {
            throw new Error("Expected the field `partnerManagedInstanceId` to be a primitive type in the JSON string but got " + data['partnerManagedInstanceId']);
        }

        return true;
    }


}

FailoverGroupProperties.RequiredProperties = ["partnerManagedInstanceId", "spec"];

/**
 * The provisioning state of the failover group resource.
 * @member {module:model/FailoverGroupProperties.ProvisioningStateEnum} provisioningState
 */
FailoverGroupProperties.prototype['provisioningState'] = undefined;

/**
 * The resource ID of the partner SQL managed instance.
 * @member {String} partnerManagedInstanceId
 */
FailoverGroupProperties.prototype['partnerManagedInstanceId'] = undefined;

/**
 * @member {module:model/FailoverGroupSpec} spec
 */
FailoverGroupProperties.prototype['spec'] = undefined;

/**
 * The status of the failover group custom resource.
 * @member {Object} status
 */
FailoverGroupProperties.prototype['status'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
FailoverGroupProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Canceled"
     * @const
     */
    "Canceled": "Canceled",

    /**
     * value: "Accepted"
     * @const
     */
    "Accepted": "Accepted"
};



export default FailoverGroupProperties;

