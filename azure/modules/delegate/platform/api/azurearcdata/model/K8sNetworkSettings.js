/**
 * AzureArcDataManagementClient
 * The AzureArcData management API provides a RESTful set of web APIs to manage Azure Data Services on Azure Arc Resources.
 *
 * The version of the OpenAPI document: 2023-01-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The K8sNetworkSettings model module.
 * @module model/K8sNetworkSettings
 * @version 2023-01-15-preview
 */
class K8sNetworkSettings {
    /**
     * Constructs a new <code>K8sNetworkSettings</code>.
     * The kubernetes network settings information.
     * @alias module:model/K8sNetworkSettings
     */
    constructor() { 
        
        K8sNetworkSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>K8sNetworkSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/K8sNetworkSettings} obj Optional instance to populate.
     * @return {module:model/K8sNetworkSettings} The populated <code>K8sNetworkSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new K8sNetworkSettings();

            if (data.hasOwnProperty('forceencryption')) {
                obj['forceencryption'] = ApiClient.convertToType(data['forceencryption'], 'Number');
            }
            if (data.hasOwnProperty('tlsciphers')) {
                obj['tlsciphers'] = ApiClient.convertToType(data['tlsciphers'], 'String');
            }
            if (data.hasOwnProperty('tlsprotocols')) {
                obj['tlsprotocols'] = ApiClient.convertToType(data['tlsprotocols'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>K8sNetworkSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>K8sNetworkSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['tlsciphers'] && !(typeof data['tlsciphers'] === 'string' || data['tlsciphers'] instanceof String)) {
            throw new Error("Expected the field `tlsciphers` to be a primitive type in the JSON string but got " + data['tlsciphers']);
        }
        // ensure the json data is a string
        if (data['tlsprotocols'] && !(typeof data['tlsprotocols'] === 'string' || data['tlsprotocols'] instanceof String)) {
            throw new Error("Expected the field `tlsprotocols` to be a primitive type in the JSON string but got " + data['tlsprotocols']);
        }

        return true;
    }


}



/**
 * If 1, then SQL Server forces all connections to be encrypted. By default, this option is 0
 * @member {Number} forceencryption
 */
K8sNetworkSettings.prototype['forceencryption'] = undefined;

/**
 * Specifies which ciphers are allowed by SQL Server for TLS
 * @member {String} tlsciphers
 */
K8sNetworkSettings.prototype['tlsciphers'] = undefined;

/**
 * A comma-separated list of which TLS protocols are allowed by SQL Server
 * @member {String} tlsprotocols
 */
K8sNetworkSettings.prototype['tlsprotocols'] = undefined;






export default K8sNetworkSettings;

