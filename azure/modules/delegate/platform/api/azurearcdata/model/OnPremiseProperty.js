/**
 * AzureArcDataManagementClient
 * The AzureArcData management API provides a RESTful set of web APIs to manage Azure Data Services on Azure Arc Resources.
 *
 * The version of the OpenAPI document: 2023-01-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OnPremiseProperty model module.
 * @module model/OnPremiseProperty
 * @version 2023-01-15-preview
 */
class OnPremiseProperty {
    /**
     * Constructs a new <code>OnPremiseProperty</code>.
     * Properties from the Kubernetes data controller
     * @alias module:model/OnPremiseProperty
     * @param id {String} A globally unique ID identifying the associated Kubernetes cluster
     * @param publicSigningKey {String} Certificate that contains the Kubernetes cluster public key used to verify signing
     */
    constructor(id, publicSigningKey) { 
        
        OnPremiseProperty.initialize(this, id, publicSigningKey);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, publicSigningKey) { 
        obj['id'] = id;
        obj['publicSigningKey'] = publicSigningKey;
    }

    /**
     * Constructs a <code>OnPremiseProperty</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OnPremiseProperty} obj Optional instance to populate.
     * @return {module:model/OnPremiseProperty} The populated <code>OnPremiseProperty</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OnPremiseProperty();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('publicSigningKey')) {
                obj['publicSigningKey'] = ApiClient.convertToType(data['publicSigningKey'], 'String');
            }
            if (data.hasOwnProperty('signingCertificateThumbprint')) {
                obj['signingCertificateThumbprint'] = ApiClient.convertToType(data['signingCertificateThumbprint'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OnPremiseProperty</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OnPremiseProperty</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OnPremiseProperty.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['publicSigningKey'] && !(typeof data['publicSigningKey'] === 'string' || data['publicSigningKey'] instanceof String)) {
            throw new Error("Expected the field `publicSigningKey` to be a primitive type in the JSON string but got " + data['publicSigningKey']);
        }
        // ensure the json data is a string
        if (data['signingCertificateThumbprint'] && !(typeof data['signingCertificateThumbprint'] === 'string' || data['signingCertificateThumbprint'] instanceof String)) {
            throw new Error("Expected the field `signingCertificateThumbprint` to be a primitive type in the JSON string but got " + data['signingCertificateThumbprint']);
        }

        return true;
    }


}

OnPremiseProperty.RequiredProperties = ["id", "publicSigningKey"];

/**
 * A globally unique ID identifying the associated Kubernetes cluster
 * @member {String} id
 */
OnPremiseProperty.prototype['id'] = undefined;

/**
 * Certificate that contains the Kubernetes cluster public key used to verify signing
 * @member {String} publicSigningKey
 */
OnPremiseProperty.prototype['publicSigningKey'] = undefined;

/**
 * Unique thumbprint returned to customer to verify the certificate being uploaded
 * @member {String} signingCertificateThumbprint
 */
OnPremiseProperty.prototype['signingCertificateThumbprint'] = undefined;






export default OnPremiseProperty;

