/**
 * AzureArcDataManagementClient
 * The AzureArcData management API provides a RESTful set of web APIs to manage Azure Data Services on Azure Arc Resources.
 *
 * The version of the OpenAPI document: 2023-01-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ActiveDirectoryConnectorDNSDetails from './ActiveDirectoryConnectorDNSDetails';
import ActiveDirectoryConnectorDomainDetails from './ActiveDirectoryConnectorDomainDetails';

/**
 * The ActiveDirectoryConnectorSpec model module.
 * @module model/ActiveDirectoryConnectorSpec
 * @version 2023-01-15-preview
 */
class ActiveDirectoryConnectorSpec {
    /**
     * Constructs a new <code>ActiveDirectoryConnectorSpec</code>.
     * The specifications of the AD Kubernetes resource.
     * @alias module:model/ActiveDirectoryConnectorSpec
     * @param activeDirectory {module:model/ActiveDirectoryConnectorDomainDetails} 
     * @param dns {module:model/ActiveDirectoryConnectorDNSDetails} 
     */
    constructor(activeDirectory, dns) { 
        
        ActiveDirectoryConnectorSpec.initialize(this, activeDirectory, dns);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, activeDirectory, dns) { 
        obj['activeDirectory'] = activeDirectory;
        obj['dns'] = dns;
    }

    /**
     * Constructs a <code>ActiveDirectoryConnectorSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActiveDirectoryConnectorSpec} obj Optional instance to populate.
     * @return {module:model/ActiveDirectoryConnectorSpec} The populated <code>ActiveDirectoryConnectorSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActiveDirectoryConnectorSpec();

            if (data.hasOwnProperty('activeDirectory')) {
                obj['activeDirectory'] = ActiveDirectoryConnectorDomainDetails.constructFromObject(data['activeDirectory']);
            }
            if (data.hasOwnProperty('dns')) {
                obj['dns'] = ActiveDirectoryConnectorDNSDetails.constructFromObject(data['dns']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActiveDirectoryConnectorSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActiveDirectoryConnectorSpec</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ActiveDirectoryConnectorSpec.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `activeDirectory`
        if (data['activeDirectory']) { // data not null
          ActiveDirectoryConnectorDomainDetails.validateJSON(data['activeDirectory']);
        }
        // validate the optional field `dns`
        if (data['dns']) { // data not null
          ActiveDirectoryConnectorDNSDetails.validateJSON(data['dns']);
        }

        return true;
    }


}

ActiveDirectoryConnectorSpec.RequiredProperties = ["activeDirectory", "dns"];

/**
 * @member {module:model/ActiveDirectoryConnectorDomainDetails} activeDirectory
 */
ActiveDirectoryConnectorSpec.prototype['activeDirectory'] = undefined;

/**
 * @member {module:model/ActiveDirectoryConnectorDNSDetails} dns
 */
ActiveDirectoryConnectorSpec.prototype['dns'] = undefined;






export default ActiveDirectoryConnectorSpec;

