/**
 * AzureArcDataManagementClient
 * The AzureArcData management API provides a RESTful set of web APIs to manage Azure Data Services on Azure Arc Resources.
 *
 * The version of the OpenAPI document: 2023-01-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ActiveDirectoryConnectorSpec from './ActiveDirectoryConnectorSpec';
import ActiveDirectoryConnectorStatus from './ActiveDirectoryConnectorStatus';
import BasicLoginInformation from './BasicLoginInformation';

/**
 * The ActiveDirectoryConnectorProperties model module.
 * @module model/ActiveDirectoryConnectorProperties
 * @version 2023-01-15-preview
 */
class ActiveDirectoryConnectorProperties {
    /**
     * Constructs a new <code>ActiveDirectoryConnectorProperties</code>.
     * The properties of an Active Directory connector resource
     * @alias module:model/ActiveDirectoryConnectorProperties
     * @param spec {module:model/ActiveDirectoryConnectorSpec} 
     */
    constructor(spec) { 
        
        ActiveDirectoryConnectorProperties.initialize(this, spec);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, spec) { 
        obj['spec'] = spec;
    }

    /**
     * Constructs a <code>ActiveDirectoryConnectorProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActiveDirectoryConnectorProperties} obj Optional instance to populate.
     * @return {module:model/ActiveDirectoryConnectorProperties} The populated <code>ActiveDirectoryConnectorProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActiveDirectoryConnectorProperties();

            if (data.hasOwnProperty('domainServiceAccountLoginInformation')) {
                obj['domainServiceAccountLoginInformation'] = BasicLoginInformation.constructFromObject(data['domainServiceAccountLoginInformation']);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('spec')) {
                obj['spec'] = ActiveDirectoryConnectorSpec.constructFromObject(data['spec']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ActiveDirectoryConnectorStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActiveDirectoryConnectorProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActiveDirectoryConnectorProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ActiveDirectoryConnectorProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `domainServiceAccountLoginInformation`
        if (data['domainServiceAccountLoginInformation']) { // data not null
          BasicLoginInformation.validateJSON(data['domainServiceAccountLoginInformation']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // validate the optional field `spec`
        if (data['spec']) { // data not null
          ActiveDirectoryConnectorSpec.validateJSON(data['spec']);
        }

        return true;
    }


}

ActiveDirectoryConnectorProperties.RequiredProperties = ["spec"];

/**
 * @member {module:model/BasicLoginInformation} domainServiceAccountLoginInformation
 */
ActiveDirectoryConnectorProperties.prototype['domainServiceAccountLoginInformation'] = undefined;

/**
 * The provisioning state of the Active Directory connector resource.
 * @member {String} provisioningState
 */
ActiveDirectoryConnectorProperties.prototype['provisioningState'] = undefined;

/**
 * @member {module:model/ActiveDirectoryConnectorSpec} spec
 */
ActiveDirectoryConnectorProperties.prototype['spec'] = undefined;

/**
 * @member {module:model/ActiveDirectoryConnectorStatus} status
 */
ActiveDirectoryConnectorProperties.prototype['status'] = undefined;






export default ActiveDirectoryConnectorProperties;

