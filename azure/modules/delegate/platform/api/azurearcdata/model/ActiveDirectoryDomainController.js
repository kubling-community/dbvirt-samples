/**
 * AzureArcDataManagementClient
 * The AzureArcData management API provides a RESTful set of web APIs to manage Azure Data Services on Azure Arc Resources.
 *
 * The version of the OpenAPI document: 2023-01-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActiveDirectoryDomainController model module.
 * @module model/ActiveDirectoryDomainController
 * @version 2023-01-15-preview
 */
class ActiveDirectoryDomainController {
    /**
     * Constructs a new <code>ActiveDirectoryDomainController</code>.
     * Information about a domain controller in the AD domain.
     * @alias module:model/ActiveDirectoryDomainController
     * @param hostname {String} Fully-qualified domain name of a domain controller in the AD domain.
     */
    constructor(hostname) { 
        
        ActiveDirectoryDomainController.initialize(this, hostname);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, hostname) { 
        obj['hostname'] = hostname;
    }

    /**
     * Constructs a <code>ActiveDirectoryDomainController</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActiveDirectoryDomainController} obj Optional instance to populate.
     * @return {module:model/ActiveDirectoryDomainController} The populated <code>ActiveDirectoryDomainController</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActiveDirectoryDomainController();

            if (data.hasOwnProperty('hostname')) {
                obj['hostname'] = ApiClient.convertToType(data['hostname'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActiveDirectoryDomainController</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActiveDirectoryDomainController</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ActiveDirectoryDomainController.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['hostname'] && !(typeof data['hostname'] === 'string' || data['hostname'] instanceof String)) {
            throw new Error("Expected the field `hostname` to be a primitive type in the JSON string but got " + data['hostname']);
        }

        return true;
    }


}

ActiveDirectoryDomainController.RequiredProperties = ["hostname"];

/**
 * Fully-qualified domain name of a domain controller in the AD domain.
 * @member {String} hostname
 */
ActiveDirectoryDomainController.prototype['hostname'] = undefined;






export default ActiveDirectoryDomainController;

