/**
 * AzureArcDataManagementClient
 * The AzureArcData management API provides a RESTful set of web APIs to manage Azure Data Services on Azure Arc Resources.
 *
 * The version of the OpenAPI document: 2023-01-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BasicLoginInformation from './BasicLoginInformation';

/**
 * The PostgresInstanceProperties model module.
 * @module model/PostgresInstanceProperties
 * @version 2023-01-15-preview
 */
class PostgresInstanceProperties {
    /**
     * Constructs a new <code>PostgresInstanceProperties</code>.
     * Postgres Instance properties.
     * @alias module:model/PostgresInstanceProperties
     */
    constructor() { 
        
        PostgresInstanceProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PostgresInstanceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostgresInstanceProperties} obj Optional instance to populate.
     * @return {module:model/PostgresInstanceProperties} The populated <code>PostgresInstanceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostgresInstanceProperties();

            if (data.hasOwnProperty('dataControllerId')) {
                obj['dataControllerId'] = ApiClient.convertToType(data['dataControllerId'], 'String');
            }
            if (data.hasOwnProperty('admin')) {
                obj['admin'] = ApiClient.convertToType(data['admin'], 'String');
            }
            if (data.hasOwnProperty('basicLoginInformation')) {
                obj['basicLoginInformation'] = BasicLoginInformation.constructFromObject(data['basicLoginInformation']);
            }
            if (data.hasOwnProperty('k8sRaw')) {
                obj['k8sRaw'] = ApiClient.convertToType(data['k8sRaw'], Object);
            }
            if (data.hasOwnProperty('lastUploadedDate')) {
                obj['lastUploadedDate'] = ApiClient.convertToType(data['lastUploadedDate'], 'Date');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostgresInstanceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostgresInstanceProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dataControllerId'] && !(typeof data['dataControllerId'] === 'string' || data['dataControllerId'] instanceof String)) {
            throw new Error("Expected the field `dataControllerId` to be a primitive type in the JSON string but got " + data['dataControllerId']);
        }
        // ensure the json data is a string
        if (data['admin'] && !(typeof data['admin'] === 'string' || data['admin'] instanceof String)) {
            throw new Error("Expected the field `admin` to be a primitive type in the JSON string but got " + data['admin']);
        }
        // validate the optional field `basicLoginInformation`
        if (data['basicLoginInformation']) { // data not null
          BasicLoginInformation.validateJSON(data['basicLoginInformation']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }

        return true;
    }


}



/**
 * The data controller id
 * @member {String} dataControllerId
 */
PostgresInstanceProperties.prototype['dataControllerId'] = undefined;

/**
 * The instance admin
 * @member {String} admin
 */
PostgresInstanceProperties.prototype['admin'] = undefined;

/**
 * @member {module:model/BasicLoginInformation} basicLoginInformation
 */
PostgresInstanceProperties.prototype['basicLoginInformation'] = undefined;

/**
 * The raw kubernetes information
 * @member {Object} k8sRaw
 */
PostgresInstanceProperties.prototype['k8sRaw'] = undefined;

/**
 * Last uploaded date from Kubernetes cluster. Defaults to current date time
 * @member {Date} lastUploadedDate
 */
PostgresInstanceProperties.prototype['lastUploadedDate'] = undefined;

/**
 * The provisioning state of the Azure Arc-enabled PostgreSQL instance.
 * @member {String} provisioningState
 */
PostgresInstanceProperties.prototype['provisioningState'] = undefined;






export default PostgresInstanceProperties;

