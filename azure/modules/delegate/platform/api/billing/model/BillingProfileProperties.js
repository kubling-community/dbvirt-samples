/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2020-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../../BaseApiClient";
import AddressDetails from './AddressDetails';
import AzurePlan from './AzurePlan';
import IndirectRelationshipInfo from './IndirectRelationshipInfo';
import InvoiceSectionsOnExpand from './InvoiceSectionsOnExpand';
import TargetCloud from './TargetCloud';

/**
 * The BillingProfileProperties model module.
 * @module model/BillingProfileProperties
 * @version 2020-05-01
 */
class BillingProfileProperties {
    /**
     * Constructs a new <code>BillingProfileProperties</code>.
     * The properties of the billing profile.
     * @alias module:model/BillingProfileProperties
     */
    constructor() { 
        
        BillingProfileProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BillingProfileProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillingProfileProperties} obj Optional instance to populate.
     * @return {module:model/BillingProfileProperties} The populated <code>BillingProfileProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillingProfileProperties();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('poNumber')) {
                obj['poNumber'] = ApiClient.convertToType(data['poNumber'], 'String');
            }
            if (data.hasOwnProperty('billingRelationshipType')) {
                obj['billingRelationshipType'] = ApiClient.convertToType(data['billingRelationshipType'], 'String');
            }
            if (data.hasOwnProperty('billTo')) {
                obj['billTo'] = AddressDetails.constructFromObject(data['billTo']);
            }
            if (data.hasOwnProperty('indirectRelationshipInfo')) {
                obj['indirectRelationshipInfo'] = IndirectRelationshipInfo.constructFromObject(data['indirectRelationshipInfo']);
            }
            if (data.hasOwnProperty('invoiceEmailOptIn')) {
                obj['invoiceEmailOptIn'] = ApiClient.convertToType(data['invoiceEmailOptIn'], 'Boolean');
            }
            if (data.hasOwnProperty('invoiceDay')) {
                obj['invoiceDay'] = ApiClient.convertToType(data['invoiceDay'], 'Number');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('enabledAzurePlans')) {
                obj['enabledAzurePlans'] = ApiClient.convertToType(data['enabledAzurePlans'], [AzurePlan]);
            }
            if (data.hasOwnProperty('invoiceSections')) {
                obj['invoiceSections'] = InvoiceSectionsOnExpand.constructFromObject(data['invoiceSections']);
            }
            if (data.hasOwnProperty('hasReadAccess')) {
                obj['hasReadAccess'] = ApiClient.convertToType(data['hasReadAccess'], 'Boolean');
            }
            if (data.hasOwnProperty('systemId')) {
                obj['systemId'] = ApiClient.convertToType(data['systemId'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('statusReasonCode')) {
                obj['statusReasonCode'] = ApiClient.convertToType(data['statusReasonCode'], 'String');
            }
            if (data.hasOwnProperty('spendingLimit')) {
                obj['spendingLimit'] = ApiClient.convertToType(data['spendingLimit'], 'String');
            }
            if (data.hasOwnProperty('targetClouds')) {
                obj['targetClouds'] = ApiClient.convertToType(data['targetClouds'], [TargetCloud]);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BillingProfileProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BillingProfileProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['poNumber'] && !(typeof data['poNumber'] === 'string' || data['poNumber'] instanceof String)) {
            throw new Error("Expected the field `poNumber` to be a primitive type in the JSON string but got " + data['poNumber']);
        }
        // ensure the json data is a string
        if (data['billingRelationshipType'] && !(typeof data['billingRelationshipType'] === 'string' || data['billingRelationshipType'] instanceof String)) {
            throw new Error("Expected the field `billingRelationshipType` to be a primitive type in the JSON string but got " + data['billingRelationshipType']);
        }
        // validate the optional field `billTo`
        if (data['billTo']) { // data not null
          AddressDetails.validateJSON(data['billTo']);
        }
        // validate the optional field `indirectRelationshipInfo`
        if (data['indirectRelationshipInfo']) { // data not null
          IndirectRelationshipInfo.validateJSON(data['indirectRelationshipInfo']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        if (data['enabledAzurePlans']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['enabledAzurePlans'])) {
                throw new Error("Expected the field `enabledAzurePlans` to be an array in the JSON data but got " + data['enabledAzurePlans']);
            }
            // validate the optional field `enabledAzurePlans` (array)
            for (const item of data['enabledAzurePlans']) {
                AzurePlan.validateJSON(item);
            };
        }
        // validate the optional field `invoiceSections`
        if (data['invoiceSections']) { // data not null
          InvoiceSectionsOnExpand.validateJSON(data['invoiceSections']);
        }
        // ensure the json data is a string
        if (data['systemId'] && !(typeof data['systemId'] === 'string' || data['systemId'] instanceof String)) {
            throw new Error("Expected the field `systemId` to be a primitive type in the JSON string but got " + data['systemId']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['statusReasonCode'] && !(typeof data['statusReasonCode'] === 'string' || data['statusReasonCode'] instanceof String)) {
            throw new Error("Expected the field `statusReasonCode` to be a primitive type in the JSON string but got " + data['statusReasonCode']);
        }
        // ensure the json data is a string
        if (data['spendingLimit'] && !(typeof data['spendingLimit'] === 'string' || data['spendingLimit'] instanceof String)) {
            throw new Error("Expected the field `spendingLimit` to be a primitive type in the JSON string but got " + data['spendingLimit']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['targetClouds'])) {
            throw new Error("Expected the field `targetClouds` to be an array in the JSON data but got " + data['targetClouds']);
        }

        return true;
    }


}



/**
 * The name of the billing profile.
 * @member {String} displayName
 */
BillingProfileProperties.prototype['displayName'] = undefined;

/**
 * The purchase order name that will appear on the invoices generated for the billing profile.
 * @member {String} poNumber
 */
BillingProfileProperties.prototype['poNumber'] = undefined;

/**
 * Identifies which services and purchases are paid by a billing profile.
 * @member {module:model/BillingProfileProperties.BillingRelationshipTypeEnum} billingRelationshipType
 */
BillingProfileProperties.prototype['billingRelationshipType'] = undefined;

/**
 * @member {module:model/AddressDetails} billTo
 */
BillingProfileProperties.prototype['billTo'] = undefined;

/**
 * @member {module:model/IndirectRelationshipInfo} indirectRelationshipInfo
 */
BillingProfileProperties.prototype['indirectRelationshipInfo'] = undefined;

/**
 * Flag controlling whether the invoices for the billing profile are sent through email.
 * @member {Boolean} invoiceEmailOptIn
 */
BillingProfileProperties.prototype['invoiceEmailOptIn'] = undefined;

/**
 * The day of the month when the invoice for the billing profile is generated.
 * @member {Number} invoiceDay
 */
BillingProfileProperties.prototype['invoiceDay'] = undefined;

/**
 * The currency in which the charges for the billing profile are billed.
 * @member {String} currency
 */
BillingProfileProperties.prototype['currency'] = undefined;

/**
 * Information about the enabled azure plans.
 * @member {Array.<module:model/AzurePlan>} enabledAzurePlans
 */
BillingProfileProperties.prototype['enabledAzurePlans'] = undefined;

/**
 * @member {module:model/InvoiceSectionsOnExpand} invoiceSections
 */
BillingProfileProperties.prototype['invoiceSections'] = undefined;

/**
 * Indicates whether user has read access to the billing profile.
 * @member {Boolean} hasReadAccess
 */
BillingProfileProperties.prototype['hasReadAccess'] = undefined;

/**
 * The system generated unique identifier for a billing profile.
 * @member {String} systemId
 */
BillingProfileProperties.prototype['systemId'] = undefined;

/**
 * The status of the billing profile.
 * @member {module:model/BillingProfileProperties.StatusEnum} status
 */
BillingProfileProperties.prototype['status'] = undefined;

/**
 * Reason for the specified billing profile status.
 * @member {module:model/BillingProfileProperties.StatusReasonCodeEnum} statusReasonCode
 */
BillingProfileProperties.prototype['statusReasonCode'] = undefined;

/**
 * The billing profile spending limit.
 * @member {module:model/BillingProfileProperties.SpendingLimitEnum} spendingLimit
 */
BillingProfileProperties.prototype['spendingLimit'] = undefined;

/**
 * Identifies the cloud environments that are associated with a billing profile. This is a system managed optional field and gets updated as the billing profile gets associated with accounts in various clouds.
 * @member {Array.<module:model/TargetCloud>} targetClouds
 */
BillingProfileProperties.prototype['targetClouds'] = undefined;

/**
 * Tags of billing profiles.
 * @member {Object.<String, String>} tags
 */
BillingProfileProperties.prototype['tags'] = undefined;





/**
 * Allowed values for the <code>billingRelationshipType</code> property.
 * @enum {String}
 * @readonly
 */
BillingProfileProperties['BillingRelationshipTypeEnum'] = {

    /**
     * value: "Direct"
     * @const
     */
    "Direct": "Direct",

    /**
     * value: "IndirectCustomer"
     * @const
     */
    "IndirectCustomer": "IndirectCustomer",

    /**
     * value: "IndirectPartner"
     * @const
     */
    "IndirectPartner": "IndirectPartner",

    /**
     * value: "CSPPartner"
     * @const
     */
    "CSPPartner": "CSPPartner"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
BillingProfileProperties['StatusEnum'] = {

    /**
     * value: "Active"
     * @const
     */
    "Active": "Active",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled",

    /**
     * value: "Warned"
     * @const
     */
    "Warned": "Warned"
};


/**
 * Allowed values for the <code>statusReasonCode</code> property.
 * @enum {String}
 * @readonly
 */
BillingProfileProperties['StatusReasonCodeEnum'] = {

    /**
     * value: "PastDue"
     * @const
     */
    "PastDue": "PastDue",

    /**
     * value: "SpendingLimitReached"
     * @const
     */
    "SpendingLimitReached": "SpendingLimitReached",

    /**
     * value: "SpendingLimitExpired"
     * @const
     */
    "SpendingLimitExpired": "SpendingLimitExpired"
};


/**
 * Allowed values for the <code>spendingLimit</code> property.
 * @enum {String}
 * @readonly
 */
BillingProfileProperties['SpendingLimitEnum'] = {

    /**
     * value: "Off"
     * @const
     */
    "Off": "Off",

    /**
     * value: "On"
     * @const
     */
    "On": "On"
};



export default BillingProfileProperties;

