/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2020-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../../BaseApiClient";

/**
 * The PolicyProperties model module.
 * @module model/PolicyProperties
 * @version 2020-05-01
 */
class PolicyProperties {
    /**
     * Constructs a new <code>PolicyProperties</code>.
     * The properties of a policy.
     * @alias module:model/PolicyProperties
     */
    constructor() { 
        
        PolicyProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PolicyProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PolicyProperties} obj Optional instance to populate.
     * @return {module:model/PolicyProperties} The populated <code>PolicyProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PolicyProperties();

            if (data.hasOwnProperty('marketplacePurchases')) {
                obj['marketplacePurchases'] = ApiClient.convertToType(data['marketplacePurchases'], 'String');
            }
            if (data.hasOwnProperty('reservationPurchases')) {
                obj['reservationPurchases'] = ApiClient.convertToType(data['reservationPurchases'], 'String');
            }
            if (data.hasOwnProperty('viewCharges')) {
                obj['viewCharges'] = ApiClient.convertToType(data['viewCharges'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PolicyProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PolicyProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['marketplacePurchases'] && !(typeof data['marketplacePurchases'] === 'string' || data['marketplacePurchases'] instanceof String)) {
            throw new Error("Expected the field `marketplacePurchases` to be a primitive type in the JSON string but got " + data['marketplacePurchases']);
        }
        // ensure the json data is a string
        if (data['reservationPurchases'] && !(typeof data['reservationPurchases'] === 'string' || data['reservationPurchases'] instanceof String)) {
            throw new Error("Expected the field `reservationPurchases` to be a primitive type in the JSON string but got " + data['reservationPurchases']);
        }
        // ensure the json data is a string
        if (data['viewCharges'] && !(typeof data['viewCharges'] === 'string' || data['viewCharges'] instanceof String)) {
            throw new Error("Expected the field `viewCharges` to be a primitive type in the JSON string but got " + data['viewCharges']);
        }

        return true;
    }


}



/**
 * The policy that controls whether Azure marketplace purchases are allowed for a billing profile.
 * @member {module:model/PolicyProperties.MarketplacePurchasesEnum} marketplacePurchases
 */
PolicyProperties.prototype['marketplacePurchases'] = undefined;

/**
 * The policy that controls whether Azure reservation purchases are allowed for a billing profile.
 * @member {module:model/PolicyProperties.ReservationPurchasesEnum} reservationPurchases
 */
PolicyProperties.prototype['reservationPurchases'] = undefined;

/**
 * The policy that controls whether users with Azure RBAC access to a subscription can view its charges.
 * @member {module:model/PolicyProperties.ViewChargesEnum} viewCharges
 */
PolicyProperties.prototype['viewCharges'] = undefined;





/**
 * Allowed values for the <code>marketplacePurchases</code> property.
 * @enum {String}
 * @readonly
 */
PolicyProperties['MarketplacePurchasesEnum'] = {

    /**
     * value: "AllAllowed"
     * @const
     */
    "AllAllowed": "AllAllowed",

    /**
     * value: "OnlyFreeAllowed"
     * @const
     */
    "OnlyFreeAllowed": "OnlyFreeAllowed",

    /**
     * value: "NotAllowed"
     * @const
     */
    "NotAllowed": "NotAllowed"
};


/**
 * Allowed values for the <code>reservationPurchases</code> property.
 * @enum {String}
 * @readonly
 */
PolicyProperties['ReservationPurchasesEnum'] = {

    /**
     * value: "Allowed"
     * @const
     */
    "Allowed": "Allowed",

    /**
     * value: "NotAllowed"
     * @const
     */
    "NotAllowed": "NotAllowed"
};


/**
 * Allowed values for the <code>viewCharges</code> property.
 * @enum {String}
 * @readonly
 */
PolicyProperties['ViewChargesEnum'] = {

    /**
     * value: "Allowed"
     * @const
     */
    "Allowed": "Allowed",

    /**
     * value: "NotAllowed"
     * @const
     */
    "NotAllowed": "NotAllowed"
};



export default PolicyProperties;

