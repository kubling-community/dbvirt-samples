/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2020-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../../BaseApiClient";

/**
 * The AzurePlan model module.
 * @module model/AzurePlan
 * @version 2020-05-01
 */
class AzurePlan {
    /**
     * Constructs a new <code>AzurePlan</code>.
     * Details of the Azure plan.
     * @alias module:model/AzurePlan
     */
    constructor() { 
        
        AzurePlan.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AzurePlan</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AzurePlan} obj Optional instance to populate.
     * @return {module:model/AzurePlan} The populated <code>AzurePlan</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AzurePlan();

            if (data.hasOwnProperty('skuId')) {
                obj['skuId'] = ApiClient.convertToType(data['skuId'], 'String');
            }
            if (data.hasOwnProperty('skuDescription')) {
                obj['skuDescription'] = ApiClient.convertToType(data['skuDescription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AzurePlan</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AzurePlan</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['skuId'] && !(typeof data['skuId'] === 'string' || data['skuId'] instanceof String)) {
            throw new Error("Expected the field `skuId` to be a primitive type in the JSON string but got " + data['skuId']);
        }
        // ensure the json data is a string
        if (data['skuDescription'] && !(typeof data['skuDescription'] === 'string' || data['skuDescription'] instanceof String)) {
            throw new Error("Expected the field `skuDescription` to be a primitive type in the JSON string but got " + data['skuDescription']);
        }

        return true;
    }


}



/**
 * The sku id.
 * @member {String} skuId
 */
AzurePlan.prototype['skuId'] = undefined;

/**
 * The sku description.
 * @member {String} skuDescription
 */
AzurePlan.prototype['skuDescription'] = undefined;






export default AzurePlan;

