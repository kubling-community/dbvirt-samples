/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2020-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../../BaseApiClient";

/**
 * The InstructionProperties model module.
 * @module model/InstructionProperties
 * @version 2020-05-01
 */
class InstructionProperties {
    /**
     * Constructs a new <code>InstructionProperties</code>.
     * A billing instruction used during invoice generation.
     * @alias module:model/InstructionProperties
     * @param amount {Number} The amount budgeted for this billing instruction.
     * @param startDate {Date} The date this billing instruction goes into effect.
     * @param endDate {Date} The date this billing instruction is no longer in effect.
     */
    constructor(amount, startDate, endDate) { 
        
        InstructionProperties.initialize(this, amount, startDate, endDate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amount, startDate, endDate) { 
        obj['amount'] = amount;
        obj['startDate'] = startDate;
        obj['endDate'] = endDate;
    }

    /**
     * Constructs a <code>InstructionProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstructionProperties} obj Optional instance to populate.
     * @return {module:model/InstructionProperties} The populated <code>InstructionProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstructionProperties();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('creationDate')) {
                obj['creationDate'] = ApiClient.convertToType(data['creationDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstructionProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstructionProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InstructionProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

InstructionProperties.RequiredProperties = ["amount", "startDate", "endDate"];

/**
 * The amount budgeted for this billing instruction.
 * @member {Number} amount
 */
InstructionProperties.prototype['amount'] = undefined;

/**
 * The date this billing instruction goes into effect.
 * @member {Date} startDate
 */
InstructionProperties.prototype['startDate'] = undefined;

/**
 * The date this billing instruction is no longer in effect.
 * @member {Date} endDate
 */
InstructionProperties.prototype['endDate'] = undefined;

/**
 * The date this billing instruction was created.
 * @member {Date} creationDate
 */
InstructionProperties.prototype['creationDate'] = undefined;






export default InstructionProperties;

