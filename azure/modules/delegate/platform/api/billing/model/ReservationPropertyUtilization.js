/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2020-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../../BaseApiClient";
import ReservationUtilizationAggregates from './ReservationUtilizationAggregates';

/**
 * The ReservationPropertyUtilization model module.
 * @module model/ReservationPropertyUtilization
 * @version 2020-05-01
 */
class ReservationPropertyUtilization {
    /**
     * Constructs a new <code>ReservationPropertyUtilization</code>.
     * Reservation utilization
     * @alias module:model/ReservationPropertyUtilization
     */
    constructor() { 
        
        ReservationPropertyUtilization.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReservationPropertyUtilization</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReservationPropertyUtilization} obj Optional instance to populate.
     * @return {module:model/ReservationPropertyUtilization} The populated <code>ReservationPropertyUtilization</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReservationPropertyUtilization();

            if (data.hasOwnProperty('trend')) {
                obj['trend'] = ApiClient.convertToType(data['trend'], 'String');
            }
            if (data.hasOwnProperty('aggregates')) {
                obj['aggregates'] = ApiClient.convertToType(data['aggregates'], [ReservationUtilizationAggregates]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReservationPropertyUtilization</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReservationPropertyUtilization</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['trend'] && !(typeof data['trend'] === 'string' || data['trend'] instanceof String)) {
            throw new Error("Expected the field `trend` to be a primitive type in the JSON string but got " + data['trend']);
        }
        if (data['aggregates']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['aggregates'])) {
                throw new Error("Expected the field `aggregates` to be an array in the JSON data but got " + data['aggregates']);
            }
            // validate the optional field `aggregates` (array)
            for (const item of data['aggregates']) {
                ReservationUtilizationAggregates.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The number of days trend for a reservation
 * @member {String} trend
 */
ReservationPropertyUtilization.prototype['trend'] = undefined;

/**
 * The array of aggregates of a reservation's utilization
 * @member {Array.<module:model/ReservationUtilizationAggregates>} aggregates
 */
ReservationPropertyUtilization.prototype['aggregates'] = undefined;






export default ReservationPropertyUtilization;

