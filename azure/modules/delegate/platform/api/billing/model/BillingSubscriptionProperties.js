/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2020-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../../BaseApiClient";
import Amount from './Amount';
import Reseller from './Reseller';

/**
 * The BillingSubscriptionProperties model module.
 * @module model/BillingSubscriptionProperties
 * @version 2020-05-01
 */
class BillingSubscriptionProperties {
    /**
     * Constructs a new <code>BillingSubscriptionProperties</code>.
     * The billing properties of a subscription.
     * @alias module:model/BillingSubscriptionProperties
     */
    constructor() { 
        
        BillingSubscriptionProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BillingSubscriptionProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillingSubscriptionProperties} obj Optional instance to populate.
     * @return {module:model/BillingSubscriptionProperties} The populated <code>BillingSubscriptionProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillingSubscriptionProperties();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('subscriptionId')) {
                obj['subscriptionId'] = ApiClient.convertToType(data['subscriptionId'], 'String');
            }
            if (data.hasOwnProperty('subscriptionBillingStatus')) {
                obj['subscriptionBillingStatus'] = ApiClient.convertToType(data['subscriptionBillingStatus'], 'String');
            }
            if (data.hasOwnProperty('lastMonthCharges')) {
                obj['lastMonthCharges'] = Amount.constructFromObject(data['lastMonthCharges']);
            }
            if (data.hasOwnProperty('monthToDateCharges')) {
                obj['monthToDateCharges'] = Amount.constructFromObject(data['monthToDateCharges']);
            }
            if (data.hasOwnProperty('billingProfileId')) {
                obj['billingProfileId'] = ApiClient.convertToType(data['billingProfileId'], 'String');
            }
            if (data.hasOwnProperty('billingProfileDisplayName')) {
                obj['billingProfileDisplayName'] = ApiClient.convertToType(data['billingProfileDisplayName'], 'String');
            }
            if (data.hasOwnProperty('costCenter')) {
                obj['costCenter'] = ApiClient.convertToType(data['costCenter'], 'String');
            }
            if (data.hasOwnProperty('customerId')) {
                obj['customerId'] = ApiClient.convertToType(data['customerId'], 'String');
            }
            if (data.hasOwnProperty('customerDisplayName')) {
                obj['customerDisplayName'] = ApiClient.convertToType(data['customerDisplayName'], 'String');
            }
            if (data.hasOwnProperty('invoiceSectionId')) {
                obj['invoiceSectionId'] = ApiClient.convertToType(data['invoiceSectionId'], 'String');
            }
            if (data.hasOwnProperty('invoiceSectionDisplayName')) {
                obj['invoiceSectionDisplayName'] = ApiClient.convertToType(data['invoiceSectionDisplayName'], 'String');
            }
            if (data.hasOwnProperty('reseller')) {
                obj['reseller'] = Reseller.constructFromObject(data['reseller']);
            }
            if (data.hasOwnProperty('skuId')) {
                obj['skuId'] = ApiClient.convertToType(data['skuId'], 'String');
            }
            if (data.hasOwnProperty('skuDescription')) {
                obj['skuDescription'] = ApiClient.convertToType(data['skuDescription'], 'String');
            }
            if (data.hasOwnProperty('suspensionReasons')) {
                obj['suspensionReasons'] = ApiClient.convertToType(data['suspensionReasons'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BillingSubscriptionProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BillingSubscriptionProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['subscriptionId'] && !(typeof data['subscriptionId'] === 'string' || data['subscriptionId'] instanceof String)) {
            throw new Error("Expected the field `subscriptionId` to be a primitive type in the JSON string but got " + data['subscriptionId']);
        }
        // ensure the json data is a string
        if (data['subscriptionBillingStatus'] && !(typeof data['subscriptionBillingStatus'] === 'string' || data['subscriptionBillingStatus'] instanceof String)) {
            throw new Error("Expected the field `subscriptionBillingStatus` to be a primitive type in the JSON string but got " + data['subscriptionBillingStatus']);
        }
        // validate the optional field `lastMonthCharges`
        if (data['lastMonthCharges']) { // data not null
          Amount.validateJSON(data['lastMonthCharges']);
        }
        // validate the optional field `monthToDateCharges`
        if (data['monthToDateCharges']) { // data not null
          Amount.validateJSON(data['monthToDateCharges']);
        }
        // ensure the json data is a string
        if (data['billingProfileId'] && !(typeof data['billingProfileId'] === 'string' || data['billingProfileId'] instanceof String)) {
            throw new Error("Expected the field `billingProfileId` to be a primitive type in the JSON string but got " + data['billingProfileId']);
        }
        // ensure the json data is a string
        if (data['billingProfileDisplayName'] && !(typeof data['billingProfileDisplayName'] === 'string' || data['billingProfileDisplayName'] instanceof String)) {
            throw new Error("Expected the field `billingProfileDisplayName` to be a primitive type in the JSON string but got " + data['billingProfileDisplayName']);
        }
        // ensure the json data is a string
        if (data['costCenter'] && !(typeof data['costCenter'] === 'string' || data['costCenter'] instanceof String)) {
            throw new Error("Expected the field `costCenter` to be a primitive type in the JSON string but got " + data['costCenter']);
        }
        // ensure the json data is a string
        if (data['customerId'] && !(typeof data['customerId'] === 'string' || data['customerId'] instanceof String)) {
            throw new Error("Expected the field `customerId` to be a primitive type in the JSON string but got " + data['customerId']);
        }
        // ensure the json data is a string
        if (data['customerDisplayName'] && !(typeof data['customerDisplayName'] === 'string' || data['customerDisplayName'] instanceof String)) {
            throw new Error("Expected the field `customerDisplayName` to be a primitive type in the JSON string but got " + data['customerDisplayName']);
        }
        // ensure the json data is a string
        if (data['invoiceSectionId'] && !(typeof data['invoiceSectionId'] === 'string' || data['invoiceSectionId'] instanceof String)) {
            throw new Error("Expected the field `invoiceSectionId` to be a primitive type in the JSON string but got " + data['invoiceSectionId']);
        }
        // ensure the json data is a string
        if (data['invoiceSectionDisplayName'] && !(typeof data['invoiceSectionDisplayName'] === 'string' || data['invoiceSectionDisplayName'] instanceof String)) {
            throw new Error("Expected the field `invoiceSectionDisplayName` to be a primitive type in the JSON string but got " + data['invoiceSectionDisplayName']);
        }
        // validate the optional field `reseller`
        if (data['reseller']) { // data not null
          Reseller.validateJSON(data['reseller']);
        }
        // ensure the json data is a string
        if (data['skuId'] && !(typeof data['skuId'] === 'string' || data['skuId'] instanceof String)) {
            throw new Error("Expected the field `skuId` to be a primitive type in the JSON string but got " + data['skuId']);
        }
        // ensure the json data is a string
        if (data['skuDescription'] && !(typeof data['skuDescription'] === 'string' || data['skuDescription'] instanceof String)) {
            throw new Error("Expected the field `skuDescription` to be a primitive type in the JSON string but got " + data['skuDescription']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['suspensionReasons'])) {
            throw new Error("Expected the field `suspensionReasons` to be an array in the JSON data but got " + data['suspensionReasons']);
        }

        return true;
    }


}



/**
 * The name of the subscription.
 * @member {String} displayName
 */
BillingSubscriptionProperties.prototype['displayName'] = undefined;

/**
 * The ID of the subscription.
 * @member {String} subscriptionId
 */
BillingSubscriptionProperties.prototype['subscriptionId'] = undefined;

/**
 * The current billing status of the subscription.
 * @member {module:model/BillingSubscriptionProperties.SubscriptionBillingStatusEnum} subscriptionBillingStatus
 */
BillingSubscriptionProperties.prototype['subscriptionBillingStatus'] = undefined;

/**
 * @member {module:model/Amount} lastMonthCharges
 */
BillingSubscriptionProperties.prototype['lastMonthCharges'] = undefined;

/**
 * @member {module:model/Amount} monthToDateCharges
 */
BillingSubscriptionProperties.prototype['monthToDateCharges'] = undefined;

/**
 * The ID of the billing profile to which the subscription is billed.
 * @member {String} billingProfileId
 */
BillingSubscriptionProperties.prototype['billingProfileId'] = undefined;

/**
 * The name of the billing profile to which the subscription is billed.
 * @member {String} billingProfileDisplayName
 */
BillingSubscriptionProperties.prototype['billingProfileDisplayName'] = undefined;

/**
 * The cost center applied to the subscription.
 * @member {String} costCenter
 */
BillingSubscriptionProperties.prototype['costCenter'] = undefined;

/**
 * The ID of the customer for whom the subscription was created. The field is applicable only for Microsoft Partner Agreement billing account.
 * @member {String} customerId
 */
BillingSubscriptionProperties.prototype['customerId'] = undefined;

/**
 * The name of the customer for whom the subscription was created. The field is applicable only for Microsoft Partner Agreement billing account.
 * @member {String} customerDisplayName
 */
BillingSubscriptionProperties.prototype['customerDisplayName'] = undefined;

/**
 * The ID of the invoice section to which the subscription is billed.
 * @member {String} invoiceSectionId
 */
BillingSubscriptionProperties.prototype['invoiceSectionId'] = undefined;

/**
 * The name of the invoice section to which the subscription is billed.
 * @member {String} invoiceSectionDisplayName
 */
BillingSubscriptionProperties.prototype['invoiceSectionDisplayName'] = undefined;

/**
 * @member {module:model/Reseller} reseller
 */
BillingSubscriptionProperties.prototype['reseller'] = undefined;

/**
 * The sku ID of the Azure plan for the subscription.
 * @member {String} skuId
 */
BillingSubscriptionProperties.prototype['skuId'] = undefined;

/**
 * The sku description of the Azure plan for the subscription.
 * @member {String} skuDescription
 */
BillingSubscriptionProperties.prototype['skuDescription'] = undefined;

/**
 * The suspension reason for a subscription. Applies only to subscriptions in Microsoft Online Services Program billing accounts.
 * @member {Array.<String>} suspensionReasons
 */
BillingSubscriptionProperties.prototype['suspensionReasons'] = undefined;





/**
 * Allowed values for the <code>subscriptionBillingStatus</code> property.
 * @enum {String}
 * @readonly
 */
BillingSubscriptionProperties['SubscriptionBillingStatusEnum'] = {

    /**
     * value: "Active"
     * @const
     */
    "Active": "Active",

    /**
     * value: "Inactive"
     * @const
     */
    "Inactive": "Inactive",

    /**
     * value: "Abandoned"
     * @const
     */
    "Abandoned": "Abandoned",

    /**
     * value: "Deleted"
     * @const
     */
    "Deleted": "Deleted",

    /**
     * value: "Warning"
     * @const
     */
    "Warning": "Warning"
};



export default BillingSubscriptionProperties;

