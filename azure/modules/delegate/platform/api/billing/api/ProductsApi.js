/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2020-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../../BaseApiClient";
import ErrorResponse from '../model/ErrorResponse';
import Product from '../model/Product';
import ProductsListResult from '../model/ProductsListResult';
import TransferProductRequestProperties from '../model/TransferProductRequestProperties';

/**
* Products service.
* @module api/ProductsApi
* @version 2020-05-01
*/
export default class ProductsApi {

    /**
    * Constructs a new ProductsApi. 
    * @alias module:api/ProductsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the productsGet operation.
     * @callback module:api/ProductsApi~productsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Product} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a product by ID. The operation is supported only for billing accounts with agreement type Microsoft Customer Agreement.
     * @param {String} billingAccountName The ID that uniquely identifies a billing account.
     * @param {String} productName The ID that uniquely identifies a product.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-03-01-preview.
     * @param {module:api/ProductsApi~productsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Product}
     */
    productsGet(billingAccountName, productName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling productsGet");
      }
      // verify the required parameter 'productName' is set
      if (productName === undefined || productName === null) {
        throw new Error("Missing the required parameter 'productName' when calling productsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling productsGet");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'productName': productName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Product;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/products/{productName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the productsListByBillingAccount operation.
     * @callback module:api/ProductsApi~productsListByBillingAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the products for a billing account. These don't include products billed based on usage. The operation is supported for billing accounts with agreement type Microsoft Customer Agreement or Microsoft Partner Agreement.
     * @param {String} billingAccountName The ID that uniquely identifies a billing account.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-03-01-preview.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter by product type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:).
     * @param {module:api/ProductsApi~productsListByBillingAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductsListResult}
     */
    productsListByBillingAccount(billingAccountName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling productsListByBillingAccount");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling productsListByBillingAccount");
      }

      let pathParams = {
        'billingAccountName': billingAccountName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProductsListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/products', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the productsListByBillingProfile operation.
     * @callback module:api/ProductsApi~productsListByBillingProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the products for a billing profile. These don't include products billed based on usage. The operation is supported for billing accounts with agreement type Microsoft Customer Agreement or Microsoft Partner Agreement.
     * @param {String} billingAccountName The ID that uniquely identifies a billing account.
     * @param {String} billingProfileName The ID that uniquely identifies a billing profile.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-03-01-preview.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter by product type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:).
     * @param {module:api/ProductsApi~productsListByBillingProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductsListResult}
     */
    productsListByBillingProfile(billingAccountName, billingProfileName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling productsListByBillingProfile");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling productsListByBillingProfile");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling productsListByBillingProfile");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProductsListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/products', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the productsListByCustomer operation.
     * @callback module:api/ProductsApi~productsListByCustomerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the products for a customer. These don't include products billed based on usage.The operation is supported only for billing accounts with agreement type Microsoft Partner Agreement.
     * @param {String} billingAccountName The ID that uniquely identifies a billing account.
     * @param {String} customerName The ID that uniquely identifies a customer.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-03-01-preview.
     * @param {module:api/ProductsApi~productsListByCustomerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductsListResult}
     */
    productsListByCustomer(billingAccountName, customerName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling productsListByCustomer");
      }
      // verify the required parameter 'customerName' is set
      if (customerName === undefined || customerName === null) {
        throw new Error("Missing the required parameter 'customerName' when calling productsListByCustomer");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling productsListByCustomer");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'customerName': customerName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProductsListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers/{customerName}/products', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the productsListByInvoiceSection operation.
     * @callback module:api/ProductsApi~productsListByInvoiceSectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the products for an invoice section. These don't include products billed based on usage. The operation is supported only for billing accounts with agreement type Microsoft Customer Agreement.
     * @param {String} billingAccountName The ID that uniquely identifies a billing account.
     * @param {String} billingProfileName The ID that uniquely identifies a billing profile.
     * @param {String} invoiceSectionName The ID that uniquely identifies an invoice section.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-03-01-preview.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter by product type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:).
     * @param {module:api/ProductsApi~productsListByInvoiceSectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductsListResult}
     */
    productsListByInvoiceSection(billingAccountName, billingProfileName, invoiceSectionName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling productsListByInvoiceSection");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling productsListByInvoiceSection");
      }
      // verify the required parameter 'invoiceSectionName' is set
      if (invoiceSectionName === undefined || invoiceSectionName === null) {
        throw new Error("Missing the required parameter 'invoiceSectionName' when calling productsListByInvoiceSection");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling productsListByInvoiceSection");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName,
        'invoiceSectionName': invoiceSectionName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProductsListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/products', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the productsMove operation.
     * @callback module:api/ProductsApi~productsMoveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Product} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Moves a product's charges to a new invoice section. The new invoice section must belong to the same billing profile as the existing invoice section. This operation is supported only for products that are purchased with a recurring charge and for billing accounts with agreement type Microsoft Customer Agreement.
     * @param {String} billingAccountName The ID that uniquely identifies a billing account.
     * @param {String} productName The ID that uniquely identifies a product.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-03-01-preview.
     * @param {module:model/TransferProductRequestProperties} transferProductRequestProperties Request parameters that are provided to the move product operation.
     * @param {module:api/ProductsApi~productsMoveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Product}
     */
    productsMove(billingAccountName, productName, apiVersion, transferProductRequestProperties, callback) {
      let postBody = transferProductRequestProperties;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling productsMove");
      }
      // verify the required parameter 'productName' is set
      if (productName === undefined || productName === null) {
        throw new Error("Missing the required parameter 'productName' when calling productsMove");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling productsMove");
      }
      // verify the required parameter 'transferProductRequestProperties' is set
      if (transferProductRequestProperties === undefined || transferProductRequestProperties === null) {
        throw new Error("Missing the required parameter 'transferProductRequestProperties' when calling productsMove");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'productName': productName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Product;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/products/{productName}/move', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the productsUpdate operation.
     * @callback module:api/ProductsApi~productsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Product} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the properties of a Product. Currently, auto renew can be updated. The operation is supported only for billing accounts with agreement type Microsoft Customer Agreement.
     * @param {String} billingAccountName The ID that uniquely identifies a billing account.
     * @param {String} productName The ID that uniquely identifies a product.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-03-01-preview.
     * @param {module:model/Product} product Request parameters that are provided to the update product operation.
     * @param {module:api/ProductsApi~productsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Product}
     */
    productsUpdate(billingAccountName, productName, apiVersion, product, callback) {
      let postBody = product;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling productsUpdate");
      }
      // verify the required parameter 'productName' is set
      if (productName === undefined || productName === null) {
        throw new Error("Missing the required parameter 'productName' when calling productsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling productsUpdate");
      }
      // verify the required parameter 'product' is set
      if (product === undefined || product === null) {
        throw new Error("Missing the required parameter 'product' when calling productsUpdate");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'productName': productName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Product;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/products/{productName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
