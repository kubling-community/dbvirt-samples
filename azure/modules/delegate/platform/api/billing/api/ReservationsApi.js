/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2020-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../../BaseApiClient";
import ErrorResponse from '../model/ErrorResponse';
import ReservationsListResult from '../model/ReservationsListResult';

/**
* Reservations service.
* @module api/ReservationsApi
* @version 2020-05-01
*/
export default class ReservationsApi {

    /**
    * Constructs a new ReservationsApi. 
    * @alias module:api/ReservationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the reservationsListByBillingAccount operation.
     * @callback module:api/ReservationsApi~reservationsListByBillingAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReservationsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the reservations for a billing account and the roll up counts of reservations group by provisioning states.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-03-01-preview.
     * @param {String} billingAccountName The ID that uniquely identifies a billing account.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter by reservation properties. The filter supports 'eq', 'or', and 'and'. It does not currently support 'ne', 'gt', 'le', 'ge', or 'not'.
     * @param {String} [orderby] May be used to sort order by reservation properties.
     * @param {String} [refreshSummary] To indicate whether to refresh the roll up counts of the reservations group by provisioning states
     * @param {String} [selectedState] The selected provisioning state
     * @param {module:api/ReservationsApi~reservationsListByBillingAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReservationsListResult}
     */
    reservationsListByBillingAccount(apiVersion, billingAccountName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reservationsListByBillingAccount");
      }
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling reservationsListByBillingAccount");
      }

      let pathParams = {
        'billingAccountName': billingAccountName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter'],
        '$orderby': opts['orderby'],
        'refreshSummary': opts['refreshSummary'],
        'selectedState': opts['selectedState']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReservationsListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/reservations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reservationsListByBillingProfile operation.
     * @callback module:api/ReservationsApi~reservationsListByBillingProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReservationsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the reservations for a billing profile and the roll up counts of reservations group by provisioning state.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-03-01-preview.
     * @param {String} billingAccountName The ID that uniquely identifies a billing account.
     * @param {String} billingProfileName The ID that uniquely identifies a billing profile.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter by reservation properties. The filter supports 'eq', 'or', and 'and'. It does not currently support 'ne', 'gt', 'le', 'ge', or 'not'.
     * @param {String} [orderby] May be used to sort order by reservation properties.
     * @param {String} [refreshSummary] To indicate whether to refresh the roll up counts of the reservations group by provisioning state
     * @param {String} [selectedState] The selected provisioning state
     * @param {module:api/ReservationsApi~reservationsListByBillingProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReservationsListResult}
     */
    reservationsListByBillingProfile(apiVersion, billingAccountName, billingProfileName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reservationsListByBillingProfile");
      }
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling reservationsListByBillingProfile");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling reservationsListByBillingProfile");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter'],
        '$orderby': opts['orderby'],
        'refreshSummary': opts['refreshSummary'],
        'selectedState': opts['selectedState']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReservationsListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/reservations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
