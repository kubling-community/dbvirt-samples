/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2020-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../../BaseApiClient";
import ErrorResponse from '../model/ErrorResponse';
import Instruction from '../model/Instruction';
import InstructionListResult from '../model/InstructionListResult';

/**
* Instructions service.
* @module api/InstructionsApi
* @version 2020-05-01
*/
export default class InstructionsApi {

    /**
    * Constructs a new InstructionsApi. 
    * @alias module:api/InstructionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the instructionsGet operation.
     * @callback module:api/InstructionsApi~instructionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Instruction} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the instruction by name. These are custom billing instructions and are only applicable for certain customers.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-03-01-preview.
     * @param {String} billingAccountName The ID that uniquely identifies a billing account.
     * @param {String} billingProfileName The ID that uniquely identifies a billing profile.
     * @param {String} instructionName Instruction Name.
     * @param {module:api/InstructionsApi~instructionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Instruction}
     */
    instructionsGet(apiVersion, billingAccountName, billingProfileName, instructionName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling instructionsGet");
      }
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling instructionsGet");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling instructionsGet");
      }
      // verify the required parameter 'instructionName' is set
      if (instructionName === undefined || instructionName === null) {
        throw new Error("Missing the required parameter 'instructionName' when calling instructionsGet");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName,
        'instructionName': instructionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Instruction;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/instructions/{instructionName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the instructionsListByBillingProfile operation.
     * @callback module:api/InstructionsApi~instructionsListByBillingProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InstructionListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the instructions by billing profile id.
     * @param {String} billingAccountName The ID that uniquely identifies a billing account.
     * @param {String} billingProfileName The ID that uniquely identifies a billing profile.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-03-01-preview.
     * @param {module:api/InstructionsApi~instructionsListByBillingProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InstructionListResult}
     */
    instructionsListByBillingProfile(billingAccountName, billingProfileName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling instructionsListByBillingProfile");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling instructionsListByBillingProfile");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling instructionsListByBillingProfile");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InstructionListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/instructions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the instructionsPut operation.
     * @callback module:api/InstructionsApi~instructionsPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Instruction} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates an instruction. These are custom billing instructions and are only applicable for certain customers.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-03-01-preview.
     * @param {String} billingAccountName The ID that uniquely identifies a billing account.
     * @param {String} billingProfileName The ID that uniquely identifies a billing profile.
     * @param {String} instructionName Instruction Name.
     * @param {module:model/Instruction} instruction The new instruction.
     * @param {module:api/InstructionsApi~instructionsPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Instruction}
     */
    instructionsPut(apiVersion, billingAccountName, billingProfileName, instructionName, instruction, callback) {
      let postBody = instruction;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling instructionsPut");
      }
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling instructionsPut");
      }
      // verify the required parameter 'billingProfileName' is set
      if (billingProfileName === undefined || billingProfileName === null) {
        throw new Error("Missing the required parameter 'billingProfileName' when calling instructionsPut");
      }
      // verify the required parameter 'instructionName' is set
      if (instructionName === undefined || instructionName === null) {
        throw new Error("Missing the required parameter 'instructionName' when calling instructionsPut");
      }
      // verify the required parameter 'instruction' is set
      if (instruction === undefined || instruction === null) {
        throw new Error("Missing the required parameter 'instruction' when calling instructionsPut");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'billingProfileName': billingProfileName,
        'instructionName': instructionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Instruction;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/instructions/{instructionName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
