/**
 * BillingManagementClient
 * Billing client provides access to billing resources for Azure subscriptions.
 *
 * The version of the OpenAPI document: 2020-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../../BaseApiClient";
import BillingSubscription from '../model/BillingSubscription';
import ErrorResponse from '../model/ErrorResponse';
import TransferBillingSubscriptionRequestProperties from '../model/TransferBillingSubscriptionRequestProperties';
import TransferProductRequestProperties from '../model/TransferProductRequestProperties';
import ValidateProductTransferEligibilityResult from '../model/ValidateProductTransferEligibilityResult';
import ValidateSubscriptionTransferEligibilityResult from '../model/ValidateSubscriptionTransferEligibilityResult';

/**
* Default service.
* @module api/DefaultApi
* @version 2020-05-01
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the billingSubscriptionsMove operation.
     * @callback module:api/DefaultApi~billingSubscriptionsMoveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BillingSubscription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Moves a subscription's charges to a new invoice section. The new invoice section must belong to the same billing profile as the existing invoice section. This operation is supported for billing accounts with agreement type Microsoft Customer Agreement.
     * @param {String} billingAccountName The ID that uniquely identifies a billing account.
     * @param {String} subscriptionId The ID that uniquely identifies an Azure subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-03-01-preview.
     * @param {module:model/TransferBillingSubscriptionRequestProperties} transferBillingSubscriptionRequestProperties Request parameters that are provided to the move subscription operation.
     * @param {module:api/DefaultApi~billingSubscriptionsMoveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BillingSubscription}
     */
    billingSubscriptionsMove(billingAccountName, subscriptionId, apiVersion, transferBillingSubscriptionRequestProperties, callback) {
      let postBody = transferBillingSubscriptionRequestProperties;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling billingSubscriptionsMove");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling billingSubscriptionsMove");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling billingSubscriptionsMove");
      }
      // verify the required parameter 'transferBillingSubscriptionRequestProperties' is set
      if (transferBillingSubscriptionRequestProperties === undefined || transferBillingSubscriptionRequestProperties === null) {
        throw new Error("Missing the required parameter 'transferBillingSubscriptionRequestProperties' when calling billingSubscriptionsMove");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BillingSubscription;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingSubscriptions/{subscriptionId}/move', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the billingSubscriptionsValidateMove operation.
     * @callback module:api/DefaultApi~billingSubscriptionsValidateMoveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ValidateSubscriptionTransferEligibilityResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validates if a subscription's charges can be moved to a new invoice section. This operation is supported for billing accounts with agreement type Microsoft Customer Agreement.
     * @param {String} billingAccountName The ID that uniquely identifies a billing account.
     * @param {String} subscriptionId The ID that uniquely identifies an Azure subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-03-01-preview.
     * @param {module:model/TransferBillingSubscriptionRequestProperties} transferBillingSubscriptionRequestProperties Request parameters that are provided to the validate move eligibility operation.
     * @param {module:api/DefaultApi~billingSubscriptionsValidateMoveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ValidateSubscriptionTransferEligibilityResult}
     */
    billingSubscriptionsValidateMove(billingAccountName, subscriptionId, apiVersion, transferBillingSubscriptionRequestProperties, callback) {
      let postBody = transferBillingSubscriptionRequestProperties;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling billingSubscriptionsValidateMove");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling billingSubscriptionsValidateMove");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling billingSubscriptionsValidateMove");
      }
      // verify the required parameter 'transferBillingSubscriptionRequestProperties' is set
      if (transferBillingSubscriptionRequestProperties === undefined || transferBillingSubscriptionRequestProperties === null) {
        throw new Error("Missing the required parameter 'transferBillingSubscriptionRequestProperties' when calling billingSubscriptionsValidateMove");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ValidateSubscriptionTransferEligibilityResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingSubscriptions/{subscriptionId}/validateMoveEligibility', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the productsValidateMove operation.
     * @callback module:api/DefaultApi~productsValidateMoveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ValidateProductTransferEligibilityResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validates if a product's charges can be moved to a new invoice section. This operation is supported only for products that are purchased with a recurring charge and for billing accounts with agreement type Microsoft Customer Agreement.
     * @param {String} billingAccountName The ID that uniquely identifies a billing account.
     * @param {String} productName The ID that uniquely identifies a product.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-03-01-preview.
     * @param {module:model/TransferProductRequestProperties} transferProductRequestProperties Request parameters that are provided to the validate move eligibility operation.
     * @param {module:api/DefaultApi~productsValidateMoveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ValidateProductTransferEligibilityResult}
     */
    productsValidateMove(billingAccountName, productName, apiVersion, transferProductRequestProperties, callback) {
      let postBody = transferProductRequestProperties;
      // verify the required parameter 'billingAccountName' is set
      if (billingAccountName === undefined || billingAccountName === null) {
        throw new Error("Missing the required parameter 'billingAccountName' when calling productsValidateMove");
      }
      // verify the required parameter 'productName' is set
      if (productName === undefined || productName === null) {
        throw new Error("Missing the required parameter 'productName' when calling productsValidateMove");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling productsValidateMove");
      }
      // verify the required parameter 'transferProductRequestProperties' is set
      if (transferProductRequestProperties === undefined || transferProductRequestProperties === null) {
        throw new Error("Missing the required parameter 'transferProductRequestProperties' when calling productsValidateMove");
      }

      let pathParams = {
        'billingAccountName': billingAccountName,
        'productName': productName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ValidateProductTransferEligibilityResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/products/{productName}/validateMoveEligibility', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
