/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2023-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../../BaseApiClient";

/**
 * The SasPolicy model module.
 * @module model/SasPolicy
 * @version 2023-01-01
 */
class SasPolicy {
    /**
     * Constructs a new <code>SasPolicy</code>.
     * SasPolicy assigned to the storage account.
     * @alias module:model/SasPolicy
     * @param sasExpirationPeriod {String} The SAS expiration period, DD.HH:MM:SS.
     * @param expirationAction {module:model/SasPolicy.ExpirationActionEnum} The SAS expiration action. Can only be Log.
     */
    constructor(sasExpirationPeriod, expirationAction) { 
        
        SasPolicy.initialize(this, sasExpirationPeriod, expirationAction);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sasExpirationPeriod, expirationAction) { 
        obj['sasExpirationPeriod'] = sasExpirationPeriod;
        obj['expirationAction'] = expirationAction || 'Log';
    }

    /**
     * Constructs a <code>SasPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SasPolicy} obj Optional instance to populate.
     * @return {module:model/SasPolicy} The populated <code>SasPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SasPolicy();

            if (data.hasOwnProperty('sasExpirationPeriod')) {
                obj['sasExpirationPeriod'] = ApiClient.convertToType(data['sasExpirationPeriod'], 'String');
            }
            if (data.hasOwnProperty('expirationAction')) {
                obj['expirationAction'] = ApiClient.convertToType(data['expirationAction'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SasPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SasPolicy</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SasPolicy.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sasExpirationPeriod'] && !(typeof data['sasExpirationPeriod'] === 'string' || data['sasExpirationPeriod'] instanceof String)) {
            throw new Error("Expected the field `sasExpirationPeriod` to be a primitive type in the JSON string but got " + data['sasExpirationPeriod']);
        }
        // ensure the json data is a string
        if (data['expirationAction'] && !(typeof data['expirationAction'] === 'string' || data['expirationAction'] instanceof String)) {
            throw new Error("Expected the field `expirationAction` to be a primitive type in the JSON string but got " + data['expirationAction']);
        }

        return true;
    }


}

SasPolicy.RequiredProperties = ["sasExpirationPeriod", "expirationAction"];

/**
 * The SAS expiration period, DD.HH:MM:SS.
 * @member {String} sasExpirationPeriod
 */
SasPolicy.prototype['sasExpirationPeriod'] = undefined;

/**
 * The SAS expiration action. Can only be Log.
 * @member {module:model/SasPolicy.ExpirationActionEnum} expirationAction
 * @default 'Log'
 */
SasPolicy.prototype['expirationAction'] = 'Log';





/**
 * Allowed values for the <code>expirationAction</code> property.
 * @enum {String}
 * @readonly
 */
SasPolicy['ExpirationActionEnum'] = {

    /**
     * value: "Log"
     * @const
     */
    "Log": "Log"
};



export default SasPolicy;

