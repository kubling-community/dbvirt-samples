/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2023-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../../BaseApiClient";
import ErrorDetail from './ErrorDetail';

/**
 * The OperationStatusResult model module.
 * @module model/OperationStatusResult
 * @version 2023-01-01
 */
class OperationStatusResult {
    /**
     * Constructs a new <code>OperationStatusResult</code>.
     * The current status of an async operation.
     * @alias module:model/OperationStatusResult
     * @param status {String} Operation status.
     */
    constructor(status) { 
        
        OperationStatusResult.initialize(this, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, status) { 
        obj['status'] = status;
    }

    /**
     * Constructs a <code>OperationStatusResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OperationStatusResult} obj Optional instance to populate.
     * @return {module:model/OperationStatusResult} The populated <code>OperationStatusResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OperationStatusResult();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('percentComplete')) {
                obj['percentComplete'] = ApiClient.convertToType(data['percentComplete'], 'Number');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('operations')) {
                obj['operations'] = ApiClient.convertToType(data['operations'], [OperationStatusResult]);
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ErrorDetail.constructFromObject(data['error']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OperationStatusResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OperationStatusResult</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OperationStatusResult.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        if (data['operations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['operations'])) {
                throw new Error("Expected the field `operations` to be an array in the JSON data but got " + data['operations']);
            }
            // validate the optional field `operations` (array)
            for (const item of data['operations']) {
                OperationStatusResult.validateJSON(item);
            };
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          ErrorDetail.validateJSON(data['error']);
        }

        return true;
    }


}

OperationStatusResult.RequiredProperties = ["status"];

/**
 * Fully qualified ID for the async operation.
 * @member {String} id
 */
OperationStatusResult.prototype['id'] = undefined;

/**
 * Name of the async operation.
 * @member {String} name
 */
OperationStatusResult.prototype['name'] = undefined;

/**
 * Operation status.
 * @member {String} status
 */
OperationStatusResult.prototype['status'] = undefined;

/**
 * Percent of the operation that is complete.
 * @member {Number} percentComplete
 */
OperationStatusResult.prototype['percentComplete'] = undefined;

/**
 * The start time of the operation.
 * @member {Date} startTime
 */
OperationStatusResult.prototype['startTime'] = undefined;

/**
 * The end time of the operation.
 * @member {Date} endTime
 */
OperationStatusResult.prototype['endTime'] = undefined;

/**
 * The operations list.
 * @member {Array.<module:model/OperationStatusResult>} operations
 */
OperationStatusResult.prototype['operations'] = undefined;

/**
 * @member {module:model/ErrorDetail} error
 */
OperationStatusResult.prototype['error'] = undefined;






export default OperationStatusResult;

