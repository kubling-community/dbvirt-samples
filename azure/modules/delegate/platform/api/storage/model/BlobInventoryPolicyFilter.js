/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2023-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../../BaseApiClient";
import BlobInventoryCreationTime from './BlobInventoryCreationTime';

/**
 * The BlobInventoryPolicyFilter model module.
 * @module model/BlobInventoryPolicyFilter
 * @version 2023-01-01
 */
class BlobInventoryPolicyFilter {
    /**
     * Constructs a new <code>BlobInventoryPolicyFilter</code>.
     * An object that defines the blob inventory rule filter conditions. For &#39;Blob&#39; definition.objectType all filter properties are applicable, &#39;blobTypes&#39; is required and others are optional. For &#39;Container&#39; definition.objectType only prefixMatch is applicable and is optional.
     * @alias module:model/BlobInventoryPolicyFilter
     */
    constructor() { 
        
        BlobInventoryPolicyFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BlobInventoryPolicyFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BlobInventoryPolicyFilter} obj Optional instance to populate.
     * @return {module:model/BlobInventoryPolicyFilter} The populated <code>BlobInventoryPolicyFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BlobInventoryPolicyFilter();

            if (data.hasOwnProperty('prefixMatch')) {
                obj['prefixMatch'] = ApiClient.convertToType(data['prefixMatch'], ['String']);
            }
            if (data.hasOwnProperty('excludePrefix')) {
                obj['excludePrefix'] = ApiClient.convertToType(data['excludePrefix'], ['String']);
            }
            if (data.hasOwnProperty('blobTypes')) {
                obj['blobTypes'] = ApiClient.convertToType(data['blobTypes'], ['String']);
            }
            if (data.hasOwnProperty('includeBlobVersions')) {
                obj['includeBlobVersions'] = ApiClient.convertToType(data['includeBlobVersions'], 'Boolean');
            }
            if (data.hasOwnProperty('includeSnapshots')) {
                obj['includeSnapshots'] = ApiClient.convertToType(data['includeSnapshots'], 'Boolean');
            }
            if (data.hasOwnProperty('includeDeleted')) {
                obj['includeDeleted'] = ApiClient.convertToType(data['includeDeleted'], 'Boolean');
            }
            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = BlobInventoryCreationTime.constructFromObject(data['creationTime']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BlobInventoryPolicyFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BlobInventoryPolicyFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['prefixMatch'])) {
            throw new Error("Expected the field `prefixMatch` to be an array in the JSON data but got " + data['prefixMatch']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['excludePrefix'])) {
            throw new Error("Expected the field `excludePrefix` to be an array in the JSON data but got " + data['excludePrefix']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['blobTypes'])) {
            throw new Error("Expected the field `blobTypes` to be an array in the JSON data but got " + data['blobTypes']);
        }

        return true;
    }


}



/**
 * An array of strings with maximum 10 blob prefixes to be included in the inventory.
 * @member {Array.<String>} prefixMatch
 */
BlobInventoryPolicyFilter.prototype['prefixMatch'] = undefined;

/**
 * An array of strings with maximum 10 blob prefixes to be excluded from the inventory.
 * @member {Array.<String>} excludePrefix
 */
BlobInventoryPolicyFilter.prototype['excludePrefix'] = undefined;

/**
 * An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs. This field is required when definition.objectType property is set to 'Blob'.
 * @member {Array.<String>} blobTypes
 */
BlobInventoryPolicyFilter.prototype['blobTypes'] = undefined;

/**
 * Includes blob versions in blob inventory when value is set to true. The definition.schemaFields values 'VersionId and IsCurrentVersion' are required if this property is set to true, else they must be excluded.
 * @member {Boolean} includeBlobVersions
 */
BlobInventoryPolicyFilter.prototype['includeBlobVersions'] = undefined;

/**
 * Includes blob snapshots in blob inventory when value is set to true. The definition.schemaFields value 'Snapshot' is required if this property is set to true, else it must be excluded.
 * @member {Boolean} includeSnapshots
 */
BlobInventoryPolicyFilter.prototype['includeSnapshots'] = undefined;

/**
 * For 'Container' definition.objectType the definition.schemaFields must include 'Deleted, Version, DeletedTime and RemainingRetentionDays'. For 'Blob' definition.objectType and HNS enabled storage accounts the definition.schemaFields must include 'DeletionId, Deleted, DeletedTime and RemainingRetentionDays' and for Hns disabled accounts the definition.schemaFields must include 'Deleted and RemainingRetentionDays', else it must be excluded.
 * @member {Boolean} includeDeleted
 */
BlobInventoryPolicyFilter.prototype['includeDeleted'] = undefined;

/**
 * @member {module:model/BlobInventoryCreationTime} creationTime
 */
BlobInventoryPolicyFilter.prototype['creationTime'] = undefined;






export default BlobInventoryPolicyFilter;

