/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2023-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../../BaseApiClient";

/**
 * The KeyPolicy model module.
 * @module model/KeyPolicy
 * @version 2023-01-01
 */
class KeyPolicy {
    /**
     * Constructs a new <code>KeyPolicy</code>.
     * KeyPolicy assigned to the storage account.
     * @alias module:model/KeyPolicy
     * @param keyExpirationPeriodInDays {Number} The key expiration period in days.
     */
    constructor(keyExpirationPeriodInDays) { 
        
        KeyPolicy.initialize(this, keyExpirationPeriodInDays);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, keyExpirationPeriodInDays) { 
        obj['keyExpirationPeriodInDays'] = keyExpirationPeriodInDays;
    }

    /**
     * Constructs a <code>KeyPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KeyPolicy} obj Optional instance to populate.
     * @return {module:model/KeyPolicy} The populated <code>KeyPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KeyPolicy();

            if (data.hasOwnProperty('keyExpirationPeriodInDays')) {
                obj['keyExpirationPeriodInDays'] = ApiClient.convertToType(data['keyExpirationPeriodInDays'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KeyPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KeyPolicy</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of KeyPolicy.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

KeyPolicy.RequiredProperties = ["keyExpirationPeriodInDays"];

/**
 * The key expiration period in days.
 * @member {Number} keyExpirationPeriodInDays
 */
KeyPolicy.prototype['keyExpirationPeriodInDays'] = undefined;






export default KeyPolicy;

