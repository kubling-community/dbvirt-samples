/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2023-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../../BaseApiClient";

/**
 * The UsageName model module.
 * @module model/UsageName
 * @version 2023-01-01
 */
class UsageName {
    /**
     * Constructs a new <code>UsageName</code>.
     * The usage names that can be used; currently limited to StorageAccount.
     * @alias module:model/UsageName
     */
    constructor() { 
        
        UsageName.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UsageName</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UsageName} obj Optional instance to populate.
     * @return {module:model/UsageName} The populated <code>UsageName</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UsageName();

            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('localizedValue')) {
                obj['localizedValue'] = ApiClient.convertToType(data['localizedValue'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UsageName</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UsageName</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }
        // ensure the json data is a string
        if (data['localizedValue'] && !(typeof data['localizedValue'] === 'string' || data['localizedValue'] instanceof String)) {
            throw new Error("Expected the field `localizedValue` to be a primitive type in the JSON string but got " + data['localizedValue']);
        }

        return true;
    }


}



/**
 * Gets a string describing the resource name.
 * @member {String} value
 */
UsageName.prototype['value'] = undefined;

/**
 * Gets a localized string describing the resource name.
 * @member {String} localizedValue
 */
UsageName.prototype['localizedValue'] = undefined;






export default UsageName;

