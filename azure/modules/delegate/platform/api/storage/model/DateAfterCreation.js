/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2023-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../../BaseApiClient";

/**
 * The DateAfterCreation model module.
 * @module model/DateAfterCreation
 * @version 2023-01-01
 */
class DateAfterCreation {
    /**
     * Constructs a new <code>DateAfterCreation</code>.
     * Object to define snapshot and version action conditions.
     * @alias module:model/DateAfterCreation
     * @param daysAfterCreationGreaterThan {Number} Value indicating the age in days after creation
     */
    constructor(daysAfterCreationGreaterThan) { 
        
        DateAfterCreation.initialize(this, daysAfterCreationGreaterThan);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, daysAfterCreationGreaterThan) { 
        obj['daysAfterCreationGreaterThan'] = daysAfterCreationGreaterThan;
    }

    /**
     * Constructs a <code>DateAfterCreation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DateAfterCreation} obj Optional instance to populate.
     * @return {module:model/DateAfterCreation} The populated <code>DateAfterCreation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DateAfterCreation();

            if (data.hasOwnProperty('daysAfterCreationGreaterThan')) {
                obj['daysAfterCreationGreaterThan'] = ApiClient.convertToType(data['daysAfterCreationGreaterThan'], 'Number');
            }
            if (data.hasOwnProperty('daysAfterLastTierChangeGreaterThan')) {
                obj['daysAfterLastTierChangeGreaterThan'] = ApiClient.convertToType(data['daysAfterLastTierChangeGreaterThan'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DateAfterCreation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DateAfterCreation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DateAfterCreation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

DateAfterCreation.RequiredProperties = ["daysAfterCreationGreaterThan"];

/**
 * Value indicating the age in days after creation
 * @member {Number} daysAfterCreationGreaterThan
 */
DateAfterCreation.prototype['daysAfterCreationGreaterThan'] = undefined;

/**
 * Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied.
 * @member {Number} daysAfterLastTierChangeGreaterThan
 */
DateAfterCreation.prototype['daysAfterLastTierChangeGreaterThan'] = undefined;






export default DateAfterCreation;

