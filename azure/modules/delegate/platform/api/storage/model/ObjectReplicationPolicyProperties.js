/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2023-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../../BaseApiClient";
import ObjectReplicationPolicyRule from './ObjectReplicationPolicyRule';

/**
 * The ObjectReplicationPolicyProperties model module.
 * @module model/ObjectReplicationPolicyProperties
 * @version 2023-01-01
 */
class ObjectReplicationPolicyProperties {
    /**
     * Constructs a new <code>ObjectReplicationPolicyProperties</code>.
     * The Storage Account ObjectReplicationPolicy properties.
     * @alias module:model/ObjectReplicationPolicyProperties
     * @param sourceAccount {String} Required. Source account name. It should be full resource id if allowCrossTenantReplication set to false.
     * @param destinationAccount {String} Required. Destination account name. It should be full resource id if allowCrossTenantReplication set to false.
     */
    constructor(sourceAccount, destinationAccount) { 
        
        ObjectReplicationPolicyProperties.initialize(this, sourceAccount, destinationAccount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sourceAccount, destinationAccount) { 
        obj['sourceAccount'] = sourceAccount;
        obj['destinationAccount'] = destinationAccount;
    }

    /**
     * Constructs a <code>ObjectReplicationPolicyProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ObjectReplicationPolicyProperties} obj Optional instance to populate.
     * @return {module:model/ObjectReplicationPolicyProperties} The populated <code>ObjectReplicationPolicyProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ObjectReplicationPolicyProperties();

            if (data.hasOwnProperty('policyId')) {
                obj['policyId'] = ApiClient.convertToType(data['policyId'], 'String');
            }
            if (data.hasOwnProperty('enabledTime')) {
                obj['enabledTime'] = ApiClient.convertToType(data['enabledTime'], 'Date');
            }
            if (data.hasOwnProperty('sourceAccount')) {
                obj['sourceAccount'] = ApiClient.convertToType(data['sourceAccount'], 'String');
            }
            if (data.hasOwnProperty('destinationAccount')) {
                obj['destinationAccount'] = ApiClient.convertToType(data['destinationAccount'], 'String');
            }
            if (data.hasOwnProperty('rules')) {
                obj['rules'] = ApiClient.convertToType(data['rules'], [ObjectReplicationPolicyRule]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ObjectReplicationPolicyProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ObjectReplicationPolicyProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ObjectReplicationPolicyProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['policyId'] && !(typeof data['policyId'] === 'string' || data['policyId'] instanceof String)) {
            throw new Error("Expected the field `policyId` to be a primitive type in the JSON string but got " + data['policyId']);
        }
        // ensure the json data is a string
        if (data['sourceAccount'] && !(typeof data['sourceAccount'] === 'string' || data['sourceAccount'] instanceof String)) {
            throw new Error("Expected the field `sourceAccount` to be a primitive type in the JSON string but got " + data['sourceAccount']);
        }
        // ensure the json data is a string
        if (data['destinationAccount'] && !(typeof data['destinationAccount'] === 'string' || data['destinationAccount'] instanceof String)) {
            throw new Error("Expected the field `destinationAccount` to be a primitive type in the JSON string but got " + data['destinationAccount']);
        }
        if (data['rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rules'])) {
                throw new Error("Expected the field `rules` to be an array in the JSON data but got " + data['rules']);
            }
            // validate the optional field `rules` (array)
            for (const item of data['rules']) {
                ObjectReplicationPolicyRule.validateJSON(item);
            };
        }

        return true;
    }


}

ObjectReplicationPolicyProperties.RequiredProperties = ["sourceAccount", "destinationAccount"];

/**
 * A unique id for object replication policy.
 * @member {String} policyId
 */
ObjectReplicationPolicyProperties.prototype['policyId'] = undefined;

/**
 * Indicates when the policy is enabled on the source account.
 * @member {Date} enabledTime
 */
ObjectReplicationPolicyProperties.prototype['enabledTime'] = undefined;

/**
 * Required. Source account name. It should be full resource id if allowCrossTenantReplication set to false.
 * @member {String} sourceAccount
 */
ObjectReplicationPolicyProperties.prototype['sourceAccount'] = undefined;

/**
 * Required. Destination account name. It should be full resource id if allowCrossTenantReplication set to false.
 * @member {String} destinationAccount
 */
ObjectReplicationPolicyProperties.prototype['destinationAccount'] = undefined;

/**
 * The storage account object replication rules.
 * @member {Array.<module:model/ObjectReplicationPolicyRule>} rules
 */
ObjectReplicationPolicyProperties.prototype['rules'] = undefined;






export default ObjectReplicationPolicyProperties;

