/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2023-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../../BaseApiClient";

/**
 * The TagProperty model module.
 * @module model/TagProperty
 * @version 2023-01-01
 */
class TagProperty {
    /**
     * Constructs a new <code>TagProperty</code>.
     * A tag of the LegalHold of a blob container.
     * @alias module:model/TagProperty
     */
    constructor() { 
        
        TagProperty.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TagProperty</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TagProperty} obj Optional instance to populate.
     * @return {module:model/TagProperty} The populated <code>TagProperty</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TagProperty();

            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
            if (data.hasOwnProperty('objectIdentifier')) {
                obj['objectIdentifier'] = ApiClient.convertToType(data['objectIdentifier'], 'String');
            }
            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
            if (data.hasOwnProperty('upn')) {
                obj['upn'] = ApiClient.convertToType(data['upn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TagProperty</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TagProperty</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['tag'] && !(typeof data['tag'] === 'string' || data['tag'] instanceof String)) {
            throw new Error("Expected the field `tag` to be a primitive type in the JSON string but got " + data['tag']);
        }
        // ensure the json data is a string
        if (data['objectIdentifier'] && !(typeof data['objectIdentifier'] === 'string' || data['objectIdentifier'] instanceof String)) {
            throw new Error("Expected the field `objectIdentifier` to be a primitive type in the JSON string but got " + data['objectIdentifier']);
        }
        // ensure the json data is a string
        if (data['tenantId'] && !(typeof data['tenantId'] === 'string' || data['tenantId'] instanceof String)) {
            throw new Error("Expected the field `tenantId` to be a primitive type in the JSON string but got " + data['tenantId']);
        }
        // ensure the json data is a string
        if (data['upn'] && !(typeof data['upn'] === 'string' || data['upn'] instanceof String)) {
            throw new Error("Expected the field `upn` to be a primitive type in the JSON string but got " + data['upn']);
        }

        return true;
    }


}



/**
 * The tag value.
 * @member {String} tag
 */
TagProperty.prototype['tag'] = undefined;

/**
 * Returns the date and time the tag was added.
 * @member {Date} timestamp
 */
TagProperty.prototype['timestamp'] = undefined;

/**
 * Returns the Object ID of the user who added the tag.
 * @member {String} objectIdentifier
 */
TagProperty.prototype['objectIdentifier'] = undefined;

/**
 * Returns the Tenant ID that issued the token for the user who added the tag.
 * @member {String} tenantId
 */
TagProperty.prototype['tenantId'] = undefined;

/**
 * Returns the User Principal Name of the user who added the tag.
 * @member {String} upn
 */
TagProperty.prototype['upn'] = undefined;






export default TagProperty;

