/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2023-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../../BaseApiClient";
import Identity from './Identity';
import Sku from './Sku';
import StorageAccountPropertiesUpdateParameters from './StorageAccountPropertiesUpdateParameters';

/**
 * The StorageAccountUpdateParameters model module.
 * @module model/StorageAccountUpdateParameters
 * @version 2023-01-01
 */
class StorageAccountUpdateParameters {
    /**
     * Constructs a new <code>StorageAccountUpdateParameters</code>.
     * The parameters that can be provided when updating the storage account properties.
     * @alias module:model/StorageAccountUpdateParameters
     */
    constructor() { 
        
        StorageAccountUpdateParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StorageAccountUpdateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StorageAccountUpdateParameters} obj Optional instance to populate.
     * @return {module:model/StorageAccountUpdateParameters} The populated <code>StorageAccountUpdateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageAccountUpdateParameters();

            if (data.hasOwnProperty('sku')) {
                obj['sku'] = Sku.constructFromObject(data['sku']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('identity')) {
                obj['identity'] = Identity.constructFromObject(data['identity']);
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = StorageAccountPropertiesUpdateParameters.constructFromObject(data['properties']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StorageAccountUpdateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StorageAccountUpdateParameters</code>.
     */
    static validateJSON(data) {
        // validate the optional field `sku`
        if (data['sku']) { // data not null
          Sku.validateJSON(data['sku']);
        }
        // validate the optional field `identity`
        if (data['identity']) { // data not null
          Identity.validateJSON(data['identity']);
        }
        // validate the optional field `properties`
        if (data['properties']) { // data not null
          StorageAccountPropertiesUpdateParameters.validateJSON(data['properties']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }

        return true;
    }


}



/**
 * @member {module:model/Sku} sku
 */
StorageAccountUpdateParameters.prototype['sku'] = undefined;

/**
 * Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters.
 * @member {Object.<String, String>} tags
 */
StorageAccountUpdateParameters.prototype['tags'] = undefined;

/**
 * @member {module:model/Identity} identity
 */
StorageAccountUpdateParameters.prototype['identity'] = undefined;

/**
 * @member {module:model/StorageAccountPropertiesUpdateParameters} properties
 */
StorageAccountUpdateParameters.prototype['properties'] = undefined;

/**
 * Optional. Indicates the type of storage account. Currently only StorageV2 value supported by server.
 * @member {module:model/StorageAccountUpdateParameters.KindEnum} kind
 */
StorageAccountUpdateParameters.prototype['kind'] = undefined;





/**
 * Allowed values for the <code>kind</code> property.
 * @enum {String}
 * @readonly
 */
StorageAccountUpdateParameters['KindEnum'] = {

    /**
     * value: "Storage"
     * @const
     */
    "Storage": "Storage",

    /**
     * value: "StorageV2"
     * @const
     */
    "StorageV2": "StorageV2",

    /**
     * value: "BlobStorage"
     * @const
     */
    "BlobStorage": "BlobStorage",

    /**
     * value: "FileStorage"
     * @const
     */
    "FileStorage": "FileStorage",

    /**
     * value: "BlockBlobStorage"
     * @const
     */
    "BlockBlobStorage": "BlockBlobStorage"
};



export default StorageAccountUpdateParameters;

