/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2023-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../../BaseApiClient";
import DateAfterCreation from './DateAfterCreation';

/**
 * The ManagementPolicyVersion model module.
 * @module model/ManagementPolicyVersion
 * @version 2023-01-01
 */
class ManagementPolicyVersion {
    /**
     * Constructs a new <code>ManagementPolicyVersion</code>.
     * Management policy action for blob version.
     * @alias module:model/ManagementPolicyVersion
     */
    constructor() { 
        
        ManagementPolicyVersion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ManagementPolicyVersion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagementPolicyVersion} obj Optional instance to populate.
     * @return {module:model/ManagementPolicyVersion} The populated <code>ManagementPolicyVersion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagementPolicyVersion();

            if (data.hasOwnProperty('tierToCool')) {
                obj['tierToCool'] = DateAfterCreation.constructFromObject(data['tierToCool']);
            }
            if (data.hasOwnProperty('tierToArchive')) {
                obj['tierToArchive'] = DateAfterCreation.constructFromObject(data['tierToArchive']);
            }
            if (data.hasOwnProperty('tierToCold')) {
                obj['tierToCold'] = DateAfterCreation.constructFromObject(data['tierToCold']);
            }
            if (data.hasOwnProperty('tierToHot')) {
                obj['tierToHot'] = DateAfterCreation.constructFromObject(data['tierToHot']);
            }
            if (data.hasOwnProperty('delete')) {
                obj['delete'] = DateAfterCreation.constructFromObject(data['delete']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagementPolicyVersion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagementPolicyVersion</code>.
     */
    static validateJSON(data) {
        // validate the optional field `tierToCool`
        if (data['tierToCool']) { // data not null
          DateAfterCreation.validateJSON(data['tierToCool']);
        }
        // validate the optional field `tierToArchive`
        if (data['tierToArchive']) { // data not null
          DateAfterCreation.validateJSON(data['tierToArchive']);
        }
        // validate the optional field `tierToCold`
        if (data['tierToCold']) { // data not null
          DateAfterCreation.validateJSON(data['tierToCold']);
        }
        // validate the optional field `tierToHot`
        if (data['tierToHot']) { // data not null
          DateAfterCreation.validateJSON(data['tierToHot']);
        }
        // validate the optional field `delete`
        if (data['delete']) { // data not null
          DateAfterCreation.validateJSON(data['delete']);
        }

        return true;
    }


}



/**
 * @member {module:model/DateAfterCreation} tierToCool
 */
ManagementPolicyVersion.prototype['tierToCool'] = undefined;

/**
 * @member {module:model/DateAfterCreation} tierToArchive
 */
ManagementPolicyVersion.prototype['tierToArchive'] = undefined;

/**
 * @member {module:model/DateAfterCreation} tierToCold
 */
ManagementPolicyVersion.prototype['tierToCold'] = undefined;

/**
 * @member {module:model/DateAfterCreation} tierToHot
 */
ManagementPolicyVersion.prototype['tierToHot'] = undefined;

/**
 * @member {module:model/DateAfterCreation} delete
 */
ManagementPolicyVersion.prototype['delete'] = undefined;






export default ManagementPolicyVersion;

