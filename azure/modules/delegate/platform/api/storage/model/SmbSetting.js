/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2023-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../../BaseApiClient";
import Multichannel from './Multichannel';

/**
 * The SmbSetting model module.
 * @module model/SmbSetting
 * @version 2023-01-01
 */
class SmbSetting {
    /**
     * Constructs a new <code>SmbSetting</code>.
     * Setting for SMB protocol
     * @alias module:model/SmbSetting
     */
    constructor() { 
        
        SmbSetting.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SmbSetting</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SmbSetting} obj Optional instance to populate.
     * @return {module:model/SmbSetting} The populated <code>SmbSetting</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SmbSetting();

            if (data.hasOwnProperty('multichannel')) {
                obj['multichannel'] = Multichannel.constructFromObject(data['multichannel']);
            }
            if (data.hasOwnProperty('versions')) {
                obj['versions'] = ApiClient.convertToType(data['versions'], 'String');
            }
            if (data.hasOwnProperty('authenticationMethods')) {
                obj['authenticationMethods'] = ApiClient.convertToType(data['authenticationMethods'], 'String');
            }
            if (data.hasOwnProperty('kerberosTicketEncryption')) {
                obj['kerberosTicketEncryption'] = ApiClient.convertToType(data['kerberosTicketEncryption'], 'String');
            }
            if (data.hasOwnProperty('channelEncryption')) {
                obj['channelEncryption'] = ApiClient.convertToType(data['channelEncryption'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SmbSetting</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SmbSetting</code>.
     */
    static validateJSON(data) {
        // validate the optional field `multichannel`
        if (data['multichannel']) { // data not null
          Multichannel.validateJSON(data['multichannel']);
        }
        // ensure the json data is a string
        if (data['versions'] && !(typeof data['versions'] === 'string' || data['versions'] instanceof String)) {
            throw new Error("Expected the field `versions` to be a primitive type in the JSON string but got " + data['versions']);
        }
        // ensure the json data is a string
        if (data['authenticationMethods'] && !(typeof data['authenticationMethods'] === 'string' || data['authenticationMethods'] instanceof String)) {
            throw new Error("Expected the field `authenticationMethods` to be a primitive type in the JSON string but got " + data['authenticationMethods']);
        }
        // ensure the json data is a string
        if (data['kerberosTicketEncryption'] && !(typeof data['kerberosTicketEncryption'] === 'string' || data['kerberosTicketEncryption'] instanceof String)) {
            throw new Error("Expected the field `kerberosTicketEncryption` to be a primitive type in the JSON string but got " + data['kerberosTicketEncryption']);
        }
        // ensure the json data is a string
        if (data['channelEncryption'] && !(typeof data['channelEncryption'] === 'string' || data['channelEncryption'] instanceof String)) {
            throw new Error("Expected the field `channelEncryption` to be a primitive type in the JSON string but got " + data['channelEncryption']);
        }

        return true;
    }


}



/**
 * @member {module:model/Multichannel} multichannel
 */
SmbSetting.prototype['multichannel'] = undefined;

/**
 * SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'.
 * @member {String} versions
 */
SmbSetting.prototype['versions'] = undefined;

/**
 * SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'.
 * @member {String} authenticationMethods
 */
SmbSetting.prototype['authenticationMethods'] = undefined;

/**
 * Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'
 * @member {String} kerberosTicketEncryption
 */
SmbSetting.prototype['kerberosTicketEncryption'] = undefined;

/**
 * SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'.
 * @member {String} channelEncryption
 */
SmbSetting.prototype['channelEncryption'] = undefined;






export default SmbSetting;

