/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2023-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../../BaseApiClient";
import ErrorResponse from '../model/ErrorResponse';
import ObjectReplicationPolicies from '../model/ObjectReplicationPolicies';
import ObjectReplicationPolicy from '../model/ObjectReplicationPolicy';

/**
* ObjectReplicationPolicies service.
* @module api/ObjectReplicationPoliciesApi
* @version 2023-01-01
*/
export default class ObjectReplicationPoliciesApi {

    /**
    * Constructs a new ObjectReplicationPoliciesApi. 
    * @alias module:api/ObjectReplicationPoliciesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the objectReplicationPoliciesCreateOrUpdate operation.
     * @callback module:api/ObjectReplicationPoliciesApi~objectReplicationPoliciesCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ObjectReplicationPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update the object replication policy of the storage account.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} accountName The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} objectReplicationPolicyId For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file.
     * @param {module:model/ObjectReplicationPolicy} objectReplicationPolicy The object replication policy set to a storage account. A unique policy ID will be created if absent.
     * @param {module:api/ObjectReplicationPoliciesApi~objectReplicationPoliciesCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ObjectReplicationPolicy}
     */
    objectReplicationPoliciesCreateOrUpdate(resourceGroupName, accountName, apiVersion, subscriptionId, objectReplicationPolicyId, objectReplicationPolicy, callback) {
      let postBody = objectReplicationPolicy;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling objectReplicationPoliciesCreateOrUpdate");
      }
      // verify the required parameter 'accountName' is set
      if (accountName === undefined || accountName === null) {
        throw new Error("Missing the required parameter 'accountName' when calling objectReplicationPoliciesCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling objectReplicationPoliciesCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling objectReplicationPoliciesCreateOrUpdate");
      }
      // verify the required parameter 'objectReplicationPolicyId' is set
      if (objectReplicationPolicyId === undefined || objectReplicationPolicyId === null) {
        throw new Error("Missing the required parameter 'objectReplicationPolicyId' when calling objectReplicationPoliciesCreateOrUpdate");
      }
      // verify the required parameter 'objectReplicationPolicy' is set
      if (objectReplicationPolicy === undefined || objectReplicationPolicy === null) {
        throw new Error("Missing the required parameter 'objectReplicationPolicy' when calling objectReplicationPoliciesCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'accountName': accountName,
        'subscriptionId': subscriptionId,
        'objectReplicationPolicyId': objectReplicationPolicyId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ObjectReplicationPolicy;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the objectReplicationPoliciesDelete operation.
     * @callback module:api/ObjectReplicationPoliciesApi~objectReplicationPoliciesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the object replication policy associated with the specified storage account.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} accountName The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} objectReplicationPolicyId For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file.
     * @param {module:api/ObjectReplicationPoliciesApi~objectReplicationPoliciesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    objectReplicationPoliciesDelete(resourceGroupName, accountName, apiVersion, subscriptionId, objectReplicationPolicyId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling objectReplicationPoliciesDelete");
      }
      // verify the required parameter 'accountName' is set
      if (accountName === undefined || accountName === null) {
        throw new Error("Missing the required parameter 'accountName' when calling objectReplicationPoliciesDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling objectReplicationPoliciesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling objectReplicationPoliciesDelete");
      }
      // verify the required parameter 'objectReplicationPolicyId' is set
      if (objectReplicationPolicyId === undefined || objectReplicationPolicyId === null) {
        throw new Error("Missing the required parameter 'objectReplicationPolicyId' when calling objectReplicationPoliciesDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'accountName': accountName,
        'subscriptionId': subscriptionId,
        'objectReplicationPolicyId': objectReplicationPolicyId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the objectReplicationPoliciesGet operation.
     * @callback module:api/ObjectReplicationPoliciesApi~objectReplicationPoliciesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ObjectReplicationPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the object replication policy of the storage account by policy ID.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} accountName The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} objectReplicationPolicyId For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file.
     * @param {module:api/ObjectReplicationPoliciesApi~objectReplicationPoliciesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ObjectReplicationPolicy}
     */
    objectReplicationPoliciesGet(resourceGroupName, accountName, apiVersion, subscriptionId, objectReplicationPolicyId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling objectReplicationPoliciesGet");
      }
      // verify the required parameter 'accountName' is set
      if (accountName === undefined || accountName === null) {
        throw new Error("Missing the required parameter 'accountName' when calling objectReplicationPoliciesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling objectReplicationPoliciesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling objectReplicationPoliciesGet");
      }
      // verify the required parameter 'objectReplicationPolicyId' is set
      if (objectReplicationPolicyId === undefined || objectReplicationPolicyId === null) {
        throw new Error("Missing the required parameter 'objectReplicationPolicyId' when calling objectReplicationPoliciesGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'accountName': accountName,
        'subscriptionId': subscriptionId,
        'objectReplicationPolicyId': objectReplicationPolicyId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ObjectReplicationPolicy;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the objectReplicationPoliciesList operation.
     * @callback module:api/ObjectReplicationPoliciesApi~objectReplicationPoliciesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ObjectReplicationPolicies} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the object replication policies associated with the storage account.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} accountName The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {module:api/ObjectReplicationPoliciesApi~objectReplicationPoliciesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ObjectReplicationPolicies}
     */
    objectReplicationPoliciesList(resourceGroupName, accountName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling objectReplicationPoliciesList");
      }
      // verify the required parameter 'accountName' is set
      if (accountName === undefined || accountName === null) {
        throw new Error("Missing the required parameter 'accountName' when calling objectReplicationPoliciesList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling objectReplicationPoliciesList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling objectReplicationPoliciesList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'accountName': accountName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ObjectReplicationPolicies;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
